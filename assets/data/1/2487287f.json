{"data":{"tag":{"id":"RU201","title":"RU201","path":"/tag/RU201","belongsTo":{"totalCount":2,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"821c2e8957c9f9558e8a4bf1e2c0c961","title":"Redis University RU201 - Minggu Ke-2","datetime":"2019-08-20 10:00:00","path":"/redis-university-ru201-minggu-ke-2","content":"<p>Ini adalah catatan minggu ke-2 dari apa yang saya pelajari di kelas RU201-nya <a href=\"https://university.redislabs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis University</a> yang berjudul <strong>\"RediSearch\"</strong>.</p>\n<p>Pada minggu ke-2 topik pembahasannya adalah seputar penggunaan query pada RediSearch.</p>\n<p>Bingung juga mau nyatetnya gimana, langsung ke contoh querynya ajalah ya.\nBtw query <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">SELECT</code> yang saya tulis pada komentar dibawah itu bukan SQL beneran, semacam <em>pseudo-code</em> SQL aja.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #4C566A\"># Membuat index articles, ini sama kayak buat table di RDBMS</span>\n<span style=\"color: #D8DEE9FF\">FT.CREATE articles SCHEMA title TEXT WEIGHT 5.0 body TEXT author_name TEXT</span>\n\n<span style=\"color: #4C566A\"># Menambahkan artikel ke index articles, ini sama kayak insert data ke table</span>\n<span style=\"color: #4C566A\"># Syntax: FT.ADD index_name id score FIELDS field value [{field} {value}...]</span>\n<span style=\"color: #D8DEE9FF\">FT.ADD articles articles 123 0.5 FIELDS title </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Lorem Ipsum</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> body </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Lorem ipsum dolor sit amet</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> author_name </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">John Doe</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE somehow match \"lorem\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> LIMIT 0 10</span>\n<span style=\"color: #D8DEE9FF\">1) </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">integer</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> 1  </span><span style=\"color: #4C566A\"># count</span>\n<span style=\"color: #D8DEE9FF\">2) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">123</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #4C566A\"># ID</span>\n<span style=\"color: #D8DEE9FF\">3) 1) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">title</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">   2) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Lorem Ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">   3) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">body</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">   4) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Lorem ipsum dolor sit amet</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">   5) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">author_name</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">   6) </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">John Doe</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE somehow match \"lorem\" OR \"ipsum\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem|ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE somehow match \"lorem\" AND \"ipsum\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE somehow match \"lorem ipsum\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\">lorem ipsum</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE somehow match \"lorem\" AND not contains \"ipsum\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem -ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE somehow match \"lorem\" OR not contains \"ipsum\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem|-ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE anyfields LIKE \"lorem%\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem*</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE levehnstein(index) sounds like \"lorem\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">%lorem%</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE (somehow match \"lorem\" AND \"ipsum\") OR somehow match \"foo\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">(lorem ipsum)|foo</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE (somehow match \"lorem\" AND \"ipsum\") OR (somehow match \"foo\" AND \"bar\")</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">(lorem ipsum)|(foo bar)</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #4C566A\"># SELECT * FROM articles WHERE (somehow match \"lorem\" AND \"ipsum\") OR not contains \"foo\"</span>\n<span style=\"color: #D8DEE9FF\">FT.SEARCH articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">(lorem ipsum)|-foo</span><span style=\"color: #ECEFF4\">\"</span></code></pre>\n<p>Dokumentasi selengkapnya tentang <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.CREATE</code>, <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.ADD</code>, dan <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.SEARCH</code> bisa dilihat pada link dibawah ini:</p>\n<ul>\n<li><a href=\"https://oss.redislabs.com/redisearch/Commands/#ftcreate\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FT.CREATE</a></li>\n<li><a href=\"https://oss.redislabs.com/redisearch/Commands/#ftadd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FT.ADD</a></li>\n<li><a href=\"https://oss.redislabs.com/redisearch/Commands/#ftsearch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FT.SEARCH</a></li>\n</ul>\n<p>Selanjutnya adalah memahami hasi dari <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.EXPLAIN</code>. Buat kamu yang terbiasa dengan RDBMS mungkin sudah familiar dengan perintah <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">explain</code>, ya perintah ini digunakan untuk menjabarkan query. Di RediSearch sendiri <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.EXPLAIN</code> ini digunakan untuk menjabarkan query pencarian (<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.SEARCH</code>).</p>\n<p>Berikut adalah contoh penggunaan <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">FT.EXPLAIN</code> beserta penjelasannya.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">INTERSECT </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">  UNION </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #D8DEE9FF\"> </span>\n<span style=\"color: #D8DEE9FF\">    lorem</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">LRM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">    +lorem</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">  UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    ipsum</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">APSM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">    +ipsum</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #ECEFF4\">}</span></code></pre>\n<p>Haduh, gimana jelasinnya ya. Mesti pakai gambar ini. Nanti deh saya buatin.\nSementara silahkan bandingin sendiri aja sama hasil explain dibawah ini:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">  lorem</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">LRM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  +lorem</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem|ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">  UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    lorem</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">LRM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">    +lorem</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">  UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    ipsum</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">APSM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">    +ipsum</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\">|ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">  lorem</span>\n<span style=\"color: #D8DEE9FF\">  UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    ipsum</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">APSM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">    +ipsum</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\"> ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">INTERSECT </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">  lorem</span>\n<span style=\"color: #D8DEE9FF\">  UNION </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    ipsum</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">APSM</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">    +ipsum</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">expanded</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #ECEFF4\">}</span>\n\n<span style=\"color: #D8DEE9FF\">FT.EXPLAIN articles </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\">lorem</span><span style=\"color: #EBCB8B\">\\\"</span><span style=\"color: #A3BE8C\"> -ipsum</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">INTERSECT </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">  lorem</span>\n<span style=\"color: #D8DEE9FF\">  NOT{</span>\n<span style=\"color: #D8DEE9FF\">    ipsum</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">}</span></code></pre>\n<p>Dari beberapa hasil explain diatas, saya sih ngerti ya, soalnya sambil keinget sama penjelasan di videonya.\nCuma nanti kalau ada waktu saya coba gambarin pakai <em>venn diagram</em> deh.</p>\n<hr>\n<p>Yaudah segitu aja untuk minggu ke-2 di RU201. Saat saya nulis ini sebetulnya sudah masuk minggu ke-3, tapi mungkin saya akan nulis minggu ke-3 nanti di minggu ke-4. Jadi segitu aja catatan minggu ini, bye.</p>\n","excerpt":"","description":"Catatan kelas Redis University RU201 minggu ke-2","author":{"id":"Muhammad Syifa","title":"Muhammad Syifa","path":"/author/Muhammad%20Syifa"}}},{"node":{"id":"a09ab95e3517e559565ab4d8a222ae85","title":"Redis University RU201 - Minggu Pertama","datetime":"2019-08-15 10:00:00","path":"/redis-university-ru201-minggu-pertama","content":"<p>Ini adalah catatan minggu pertama dari apa yang saya pelajari di kelas RU201-nya <a href=\"https://university.redislabs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis University</a> yang berjudul <strong>\"RediSearch\"</strong>.</p>\n<p>Pada kelas ini, pembahasannya adalah tentang RediSearch, yaitu modul Redis yang berisi perlengkapan untuk melakukan pencarian berbasis memori dan melakukan secondary indexing.</p>\n<p>Kelas RU201 yang saya ikuti ini dimulai pada 7 Agustus 2019, dan akan berjalan selama 6 minggu\ndimana 5 minggu pertama adalah pembelajaran, dan minggu terakhir adalah ujian.\nPada 5 minggu pertama, peserta dibagikan materi berupa video, quiz, dan diakhiri dengan PR mingguan.\nNilai dari PR mingguan akan diakumulasikan pada nilai akhir, jika nilai akhir mencapai 65% atau lebih, peserta akan diberikan sertifikat penyelesaian dari Redis University.</p>\n<p>Sebagaimana kelas Redis University lainnya, RU201 juga memberikan Virtual Lab di setiap minggunya yang sudah terinstall Redis dan RediSearch.</p>\n<h2 id=\"catatan-ru201-minggu-pertama\"><a href=\"#catatan-ru201-minggu-pertama\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Catatan RU201 Minggu Pertama</h2>\n<p>Pada minggu pertama, materi yang dibahas adalah:</p>\n<ol>\n<li>Redis Module</li>\n<li>Konsep Search Engine</li>\n<li>Konsep Secondary Index</li>\n<li>RediSearch vs Redis</li>\n</ol>\n<h4 id=\"1-redis-module\"><a href=\"#1-redis-module\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Redis Module</h4>\n<p>Redis module adalah software tambahan untuk menambahkan fungsionalitas yang berbeda pada Redis.\nRedis module berbeda dengan Redis client yang dibahas pada kelas RU201J.</p>\n<p>Berikut adalah poin-poin penting tentang redis module.</p>\n<ol>\n<li>Redis module adalah compiled software.</li>\n<li>Redis module diimplementasikan sebagai sebuah shared object file (kurang tau maksudnya apa).</li>\n<li>Redis module berisi subroutines yang mengizinkan Redis server untuk terintegrasi dengannya saat runtime. Subroutines dipanggil oleh Redis melalui <em>foreign function interface</em>.</li>\n<li>Umumnya redis module dibuat menggunakan C, C++ dan Rust.</li>\n<li>Redis module dapat mengimplementasikan data type tersendiri diluar data types yang disediakan Redis.</li>\n<li>Redis module dapat menambahkan perintah-perintah baru pada Redis server.</li>\n<li>Data type memiliki akses langsung ke memori, disimpan ke server, dan beroperasi dengan kecepatan dan efisiensi yang sama dengan built-in commands.</li>\n<li>\n<p>Redis module dapat diintegrasikan dengan beberapa cara:</p>\n<ul>\n<li>Melalui file redis.conf.</li>\n<li>Melalui command line argument.</li>\n<li>Melalui perintah <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">MODULE LOAD</code> pada redis-cli.</li>\n<li>Melalui Redis enterprise GUI.</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"2-konsep-search-engine\"><a href=\"#2-konsep-search-engine\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Konsep Search Engine</h4>\n<p>Pada bagian ini yang pertama kali dibahas adalah tentang konsep dasar dari vocabulary pada search engine.\nUmumnya setiap indeks search engine terdiri dari sekumpulan dokumen. Setiap dokumen diidentifikasikan oleh ID yang terbuat dari sekumpulan field.</p>\n<p>Berikut poin-poin cukup penting untuk diingat:</p>\n<ul>\n<li>Indeks terdiri dari sekumpulan dokumen.</li>\n<li>Indeks dapat hanya berisi referensi dari dokumen tanpa menyimpan dokumen tersebut.</li>\n<li>Indeks tidak mengharuskan setiap field di dokumen untuk didefinisikan pada skema.</li>\n</ul>\n<h6 id=\"tokenization\"><a href=\"#tokenization\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tokenization</h6>\n<p>DBMS pada umumnya menyimpan teks sebagai binary-stream, sedangkan search engine perlu memahami bahasa manusia\nsehingga tidak dapat menyimpan teks sebagai binary-stream. Hal pertama yang dilakukan search engine adalah\nmengambil teks dan mengubahnya menjadi huruf kecil semua, lalu memecah teks-teks tersebut kedalam <em>logical-unit</em>, alias token. Untuk mendapatkan token, diperlukan proses <em>tokenization</em> (tokenisasi).</p>\n<p>Sebagai contoh, pada kalimat \"sebuah token adalah\", jika dilakukan proses tokenisasi akan menjadi 3 buah token:\n\"sebuah\", \"token\", dan \"adalah\".</p>\n<p>Pada RediSearch, spasi bukan satu-satunya pemisah token. Melainkan hampir semua tanda baca adalah pemisah dari token, dan akan diabaikan.</p>\n<p>Sebagai contoh saat kamu memiliki kalimat \"kamu adalah satu-satunya\", maka RediSearch akan memecahnya menjadi 4 buah token: \"kamu\", \"adalah\", \"satu\", \"satunya\".</p>\n<p>Jika kamu menginginkan \"satu-satunya\" dianggap sebagai sebuah token, kamu dapat melakukan escaping dengan menambahkan karakter backslash <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">\\</code> pada karakter pemisah. Contoh: \"kamu adalah satu\\-satunya\".</p>\n<h6 id=\"stop-words\"><a href=\"#stop-words\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Stop Words</h6>\n<p>Stop words adalah daftar kata yang dianggap tidak penting (dapat diabaikan) sehingga perlu dihilangkan dari indeks.\nSebagai contoh adalah kata \"a\" (sebuah/seorang), kata tersebut sangat sering digunakan pada hampir semua dokumen, sehingga dirasa tidak perlu menyimpannya kedalam indeks.</p>\n<p>Pada RediSearch daftar katayang masuk kedalam stop words (secara default) adalah:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">a,    is,    the,   an,   and,  are, as,  at,   be,   but,  by,   for,</span>\n<span style=\"color: #D8DEE9FF\">if,   in,    into,  it,   no,   not, of,  on,   or,   such, that, their,</span>\n<span style=\"color: #D8DEE9FF\">then, there, these, they, this, to,  was, will, with</span></code></pre>\n<p>Kata-kata tersebut secara default akan diabaikan oleh RediSearch, tidak akan dimasukkan kedalam indeks.</p>\n<h5 id=\"stemming\"><a href=\"#stemming\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Stemming</h5>\n<p>Stemming adalah proses mengubah kata pada setiap token menjadi kata dasarnya saja. Sebagai contoh kata \"menciptakan\", imbuhan \"men-kan\" akan dihapus, sehingga yang disimpan kedalam indeks hanya kata \"cipta\" saja. Kata kunci yang dimasukkan pada search engine juga dilakukan stemming. Dengan begini search engine yang dibuat jadi nggak kaku-kaku banget.</p>\n<p>Di RediSearch sendiri stemming bersifat optional, karena proses stemming ini cukup rumit untuk diadaptasi pada setiap bahasa, karena peraturan masing-masing bahasa yang cukup kompleks.</p>\n<h4 id=\"3-konsep-secondary-index\"><a href=\"#3-konsep-secondary-index\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Konsep Secondary Index</h4>\n<p>Secondary indeks seperti namanya adalah indeks kedua setelah indeks utama (primary index). Yang dimaksud kedua disini, jadi secondary index adalah index yang berisi indeks utama. Aduh bingung juga nulisnya.</p>\n<p>Gini, misalkan di MySQL kita punya database customer yang berisi kolom \"ID\", \"email\", \"name\", \"phone\", \"dob\", dan \"city\", dimana kolom ID adalah primary key (primary index).</p>\n<p>Saat kita ingin mencari customer berdasarkan \"city\", untuk mempercepat pencarian kita membutuhkan secondary index yang berisi ID dari si customer. Nanti setelah ID-nya didapat, barulah kita mengambil data customer secara utuh.</p>\n<p>Disini RediSearch berperan sebagai secondary index dimana dia menyimpan field-field yang akan dilakukan pencarian, yang berisi primary index.</p>\n<p>RediSearch memiliki kelebihan sebagai secondary index yaitu sebagaimana Redis, RedisSearch menyimpan secondary index kedalam memory (bukan phisycal storage) sehingga performa lebih optimal.</p>\n<p>Kekurangan menggunakan secondary index diantaranya:</p>\n<ul>\n<li>Meningkatkan kompleksitas untuk menjaga indeks supaya tetap sesuai dengan penyimpanan aslinya.</li>\n<li>Berpotensi out-of-date. Lagi-lagi kita harus menjaga indeks supaya sesuai dengan penyimpanan aslinya.</li>\n<li>2 stage latency. Karena kita memerlukan setidaknya 2 proses untuk setiap pencarian. Query ke RediSearch, kemudian query ke storage aslinya.</li>\n</ul>\n<h4 id=\"4-redisearch-vs-redis\"><a href=\"#4-redisearch-vs-redis\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. RediSearch vs Redis</h4>\n<p>RediSearch memproses nilai berbeda dengan Redis biasa. Berikut adalah beberapa perbedannya.</p>\n<h6 id=\"keyspaces-vs-index\"><a href=\"#keyspaces-vs-index\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Keyspaces vs Index</h6>\n<p>Pada RediSearch tidak berlaku one-key pattern seperti halnya Redis biasa. Setiap key pada RediSearch disimpan menggunakan key space khusus sehingga kita tidak dapat menggunakan perintah redis biasa pada key yang digunakan di RediSearch.</p>\n<h6 id=\"field-types\"><a href=\"#field-types\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Field Types</h6>\n<p>Ada 4 tipe data yang perlu diketahui pada RediSearch.</p>\n<ol>\n<li>Text: untuk menyimpan teks. Untuk setiap skema dari dokumen, maksimal hanya boleh terdiri dari 128 text field. Text field dapat diberikan bobot dan dapat dilakukan sorting.</li>\n<li>Numeric: untuk menyimpan data non-tekstual. Tipe ini dapat dilakukan sorting dan ranging. </li>\n<li>Tag: untuk menyimpan sekumpulan teks/label/kategri. Berbeda dengan teks field, tag fields tidak diterapkan stemming dan stop words.</li>\n<li>Geo: untuk menyimpan latitude dan longitude. Tipe ini disimpan sebagai sorted-set pada Redis.</li>\n</ol>\n<hr>\n<p>Sepertinya segitu aja yang perlu dicatat pada minggu pertama di RU201 ini. Yaudahlah sampai jumpa di catatan minggu berikutnya.</p>\n","excerpt":"","description":"Catatan kelas Redis University RU201 minggu pertama","author":{"id":"Muhammad Syifa","title":"Muhammad Syifa","path":"/author/Muhammad%20Syifa"}}}]}}},"context":{}}