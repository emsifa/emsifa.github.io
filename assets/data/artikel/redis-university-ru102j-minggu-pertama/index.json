{"hash":"b0048d7470397959ff747340f2454df5aa79024a","data":{"post":{"title":"Redis University RU102J - Minggu Pertama","slug":"redis-university-ru102j-minggu-pertama","datetime":"2019-08-15 09:00:00","content":"<p>Ini adalah catatan minggu pertama dari apa yang saya pelajari di kelas RU102J-nya <a href=\"https://university.redislabs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis University</a> yang berjudul <strong>\"Redis for Java Developers\"</strong>.</p>\n<p>Seperti judulnya, para peserta diajarkan best-practice menggunakan Redis pada aplikasi berbasis Java.\nDisini peserta akan dituntun untuk membuat aplikasi <em>Redis Solar</em>, yaitu aplikasi untuk memonitoring panel surya berbasis web menggunakan Java framework <a href=\"https://www.dropwizard.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dropwizard</a> sebagai back-end dan <a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue.js</a> sebagai front-end frameworknya.</p>\n<p>Kelas RU102J yang saya ikuti ini dimulai pada 7 Agustus 2019, dan akan berjalan selama 5 minggu\ndimana 4 minggu pertama adalah pembelajaran, dan minggu terakhir adalah ujian.\nPada 4 minggu pertama, peserta dibagikan materi berupa video, quiz, dan diakhiri dengan PR mingguan.\nNilai dari PR mingguan akan diakumulasikan pada nilai akhir, jika nilai akhir mencapai 65% atau lebih, peserta akan diberikan sertifikat penyelesaian dari Redis University.</p>\n<p>Sebagaimana kelas Redis University lainnya, RU102J juga memberikan Virtual Lab di setiap minggunya yang sudah terinstall redis beserta java environmentnya.</p>\n<p>Selain menggunakan Virtual Lab, kelas ini juga sudah menyediakan docker image untuk peserta yang ingin menjalankan aplikasi di komputernya sendiri.</p>\n<h2 id=\"catatan-ru102j-minggu-pertama\"><a href=\"#catatan-ru102j-minggu-pertama\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Catatan RU102J Minggu Pertama</h2>\n<p>Pada minggu pertama ini pembahasannya hanya seputar setup environment, pengenalan Redis Client, serta pengenalan DAO pattern.</p>\n<p>Untuk setup environment saya rasa tidak perlu saya catat disini, karena itu berbeda-beda untuk setiap OS.\nKarena saya juga di kelas ini menggunakan Virtual Lab dari mereka (ngirit storage saya om :p). Jadi langsung saja bahas tentang Redis Client dan DAO Pattern.</p>\n<h4 id=\"redis-clients\"><a href=\"#redis-clients\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Redis Clients</h4>\n<p>Redis client adalah library untuk menghubungkan aplikasi yang akan dibuat dengan Redis server.\nRedis client saat ini sudah tersedia pada berbagai bahasa pemrograman populer. Tugas redis client antara lain:</p>\n<ol>\n<li>Mengelola koneksi antara client (app) dengan redis-server.</li>\n<li>Mengimplementasikan Redis Serialization Protocol (ReSP).</li>\n<li>Menyajikan API untuk menjalankan perintah redis ke redis-server pada bahasa pemrograman terkait.</li>\n</ol>\n<p>Ada beberapa redis client untuk Java yang dijadikan pembahasan pada kelas ini. Diantaranya adalah:</p>\n<ol>\n<li>Jedis.</li>\n<li>Lettuce.</li>\n<li>Redisson.</li>\n</ol>\n<p>Sedangkan yang akan digunakan pada kelas ini adalah Jedis, karena:</p>\n<ol>\n<li>Ukuran library yang kecil.</li>\n<li>API yang mirip-mirip dengan redis-cli.</li>\n</ol>\n<p>Berikut adalah hal dasar yang perlu diketahui saat menggunakan Jedis:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #888\">// Initialize connection</span>\n<span style=\"color: #2BA8FF\">String</span><span style=\"color: #FFFFFF\"> redisHost </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #50E3C2\">\"localhost\"</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #2BA8FF\">int</span><span style=\"color: #FFFFFF\"> redisPort </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">6379</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #2BA8FF\">Jedis</span><span style=\"color: #FFFFFF\"> jedis </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF0078\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Jedis</span><span style=\"color: #FFFFFF\">(redisHost, redisPort)</span><span style=\"color: #EFEFEF\">;</span>\n\n<span style=\"color: #888\">// Set value</span>\n<span style=\"color: #FFFFFF\">jedis</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">set</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #50E3C2\">\"foo\"</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #50E3C2\">\"bar\"</span><span style=\"color: #EFEFEF\">);</span>\n\n<span style=\"color: #888\">// Get value</span>\n<span style=\"color: #2BA8FF\">String</span><span style=\"color: #FFFFFF\"> value </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #50E3C2\">\"foo\"</span><span style=\"color: #EFEFEF\">);</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// \"bar\"</span></code></pre>\n<p>Berikut ini adalah type mapping antara Java dan Redis:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Redis</th>\n<th align=\"center\">Java</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">string</td>\n<td align=\"center\">String</td>\n</tr>\n<tr>\n<td align=\"center\">list</td>\n<td align=\"center\">List<String></td>\n</tr>\n<tr>\n<td align=\"center\">set</td>\n<td align=\"center\">Set<String></td>\n</tr>\n<tr>\n<td align=\"center\">hash</td>\n<td align=\"center\">Map&#x3C;String, String></td>\n</tr>\n<tr>\n<td align=\"center\">float</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">integer</td>\n<td align=\"center\">Long</td>\n</tr>\n</tbody>\n</table>\n<p>Untuk API Jedis selengkapnya bisa dilihat di dokumentasi Jedis <a href=\"http://xetorthio.github.io/jedis/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">disini</a>.</p>\n<h4 id=\"dao-pattern\"><a href=\"#dao-pattern\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DAO Pattern</h4>\n<p>DAO adalah singkatan dari Data Access Object. DAO pattern memisahkan data access interface dari logic untuk berinteraksi dengan penyimpanan data. DAO pattern mendukung implementasi beragam penyimpanan data. Pada DAO domain objek dipisahkan dari logic utama.</p>\n<p>Kalau kamu pernah coba Repository Pattern, DAO ini mirip-mirip dengan Repository Pattern.</p>\n<p>Pada DAO pattern, kita memerlukan setidaknya beberapa hal dibawah ini:</p>\n<ol>\n<li>Domain Object: untuk merepresentasikan data.</li>\n<li>DAO interface: interface yang berisi data-store-agnostic API.</li>\n<li>DAO Implementation: class yang mengimplementasikan DAO interface untuk berinteraksi dengan data storage.</li>\n</ol>\n<p>Berikut ini adalah contoh diagram dari penerapan DAO pattern.</p>\n<p><img src=\"/images/posts/ru102j-w1-dao.png\" alt=\"DAO Pattern\"></p>\n<p>Pada diagram diatas, interface <code>SiteDao</code> berperan untuk melakukan abstraksi. Untuk menggunakan Redis pada pattern ini, dibuatlah class <code>SiteDaoRedisImpl</code> yang mengimplementasikan <code>SiteDao</code>. <code>SiteDaoRedisImpl</code> ini terhubung ke penyimpanan redis menggunakan Redis Client. Sedangkan class <code>Site</code> pada diagram diatas digunakan sebagai objek masukan atau kembalian dari setiap class yang mengimplementasikan <code>SiteDao</code> interface, yang dalam contoh ini adalah <code>SiteDaoRedisImpl</code>.</p>\n<p>Dengan pattern seperti ini, Application Code terima beres, tidak perlu tahu-menahu yang terjadi pada data storage.\nJika suatu saat kita ingin menggantikan Redis, kita hanya perlu membuat class yang mengimplementasikan <code>SiteDao</code>, dan memasukkannya ke Application Code. Sedangkan pada Application Code kita tidak perlu merubah apapun.</p>\n<hr>\n<p>Sebetulnya di kelas diajarkan coding Java untuk menerapkan DAO pattern ini, cuma codenya terlalu panjang, dan sebagian besar hanya code Java sederhana, yang bagian pentingnya sudah ditulis pada snippet Redis Clients diatas, jadi saya nggak ngerasa perlu untuk mencatat.</p>\n<p>Jadi segitu aja catatan RU102J untuk minggu ini. Sampai jumpa di catatan minggu selanjutnya.</p>\n","description":"Catatan kelas Redis University RU102 minggu pertama","timeToRead":3,"cover":"/images/posts/ru102j-w1-cover.png","coverThumb":"/images/posts/ru102j-w1-cover.png","fullscreen":false,"author":{"id":"Muhammad Syifa","title":"Muhammad Syifa","path":"/author/Muhammad%20Syifa/"},"tags":[{"id":"Redis University","title":"Redis University","path":"/tag/Redis%20University/"},{"id":"Course","title":"Course","path":"/tag/Course/"},{"id":"RU102J","title":"RU102J","path":"/tag/RU102J/"}]}},"context":{}}