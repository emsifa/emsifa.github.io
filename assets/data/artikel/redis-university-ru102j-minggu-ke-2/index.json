{"hash":"e0fe8f3c0e0a06b4331f8235dffa4da8e41892ab","data":{"post":{"title":"Redis University RU102J - Minggu Ke-2","slug":"redis-university-ru102j-minggu-ke-2","datetime":"2019-08-18 09:00:00","content":"<p>Ini adalah catatan minggu ke-2 saya di kelas RU102J-nya Redis University.\nJika pada minggu pertama hanya sebatas setup java environment, java redis client dan perkenalan DAO pattern,\npada minggu ini kita mulai membuat aplikasi RediSolar.</p>\n<p>Spesifiknya, minggu ini topik pembahasannya adalah:</p>\n<ol>\n<li>Pengenalan Data Model</li>\n<li>Metrics with Sorted Sets</li>\n<li>Making Lua Script</li>\n<li>Pipelining with Jedis</li>\n<li>Transactions with Jedis</li>\n</ol>\n<h2 id=\"1-pengenalan-data-model\"><a href=\"#1-pengenalan-data-model\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Pengenalan Data Model</h2>\n<p>Data model ini sebetulnya sudah sedikit disinggung pada minggu pertama pada diagram DAO.\nCuma disini dicontohkan membuat data model untuk MeterReading (meteran).</p>\n<p>Jadi untuk membuat aplikasi RediSolar ini, kita membutuhkan data model class MeterReading dengan\nproperti seperti dibawah ini:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #2BA8FF\">public</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">class</span><span style=\"color: #FFFFFF\"> MeterReading </span><span style=\"color: #EFEFEF\">{</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> siteId</span><span style=\"color: #EFEFEF\">;</span><span style=\"color: #FFFFFF\">            </span><span style=\"color: #888\">// ID lokasi (rumah)</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">ZonedDateTime</span><span style=\"color: #FFFFFF\"> dateTime</span><span style=\"color: #EFEFEF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// waktu</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Double</span><span style=\"color: #FFFFFF\"> whUsed</span><span style=\"color: #EFEFEF\">;</span><span style=\"color: #FFFFFF\">          </span><span style=\"color: #888\">// daya digunakan</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Double</span><span style=\"color: #FFFFFF\"> whGenerated</span><span style=\"color: #EFEFEF\">;</span><span style=\"color: #FFFFFF\">     </span><span style=\"color: #888\">// daya digenerate</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Double</span><span style=\"color: #FFFFFF\"> tempC</span><span style=\"color: #EFEFEF\">;</span><span style=\"color: #FFFFFF\">           </span><span style=\"color: #888\">// suhu dalam celcius</span>\n<span style=\"color: #EFEFEF\">}</span></code></pre>\n<h2 id=\"2-metrics-with-sorted-sets\"><a href=\"#2-metrics-with-sorted-sets\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Metrics with Sorted Sets</h2>\n<p>Kemudian untuk menyimpan metric, struktur data yang digunakan adalah sorted sets dengan\nformat key dan value seperti dibawah ini:</p>\n<p>Format key:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #FFFFFF\">metrics:wHg:2020-01-01:1</span></code></pre>\n<p>Dimana:</p>\n<ul>\n<li><code>metrics</code>: prefix</li>\n<li><code>wHg</code>: unit (satuan)</li>\n<li><code>2020-01-01</code>: tanggal</li>\n<li><code>1</code>: site ID</li>\n</ul>\n<p>Sedangkan untuk struktur sorted setnya adalah sebagai berikut:</p>\n<ul>\n<li>score: menit</li>\n<li>value: nilai:menit</li>\n</ul>\n<p>Contoh, perintah <code>ZADD</code> dibawah ini maksudnya adalah:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #FFFFFF\">ZADD metrics:wHg:2020-01-01:1 30 18.5:30</span></code></pre>\n<ul>\n<li>Unit: wHg (watt hours generated)</li>\n<li>Tanggal: 2020-01-01</li>\n<li>Site ID: 1</li>\n<li>Menit: 30</li>\n<li>Nilai: 18.5</li>\n</ul>\n<p>Struktur seperti diatas digunakan karena:</p>\n<ol>\n<li>Pengukuran (metrics) akan secara otomatis disortir.</li>\n<li>Efisien untuk di fetch: O((log n) + m).</li>\n<li>Efisien untuk insert: O(log n).</li>\n<li>Hemat memori.</li>\n</ol>\n<h2 id=\"3-making-lua-script\"><a href=\"#3-making-lua-script\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Making Lua Script</h2>\n<p>Topik pembahasan selanjutnya adalah tentang tata cara menjalankan script Lua pada Java untuk melakukan atomic transaction di Redis. Kalau di MySQL atau RDBMS lain mungkin kalian familiar dengan istilah stored procedure, nah si Lua disini perannya seperti itu.</p>\n<p>Sebagai contoh, kita ingin membuat script untuk mengupdate sebuah key, hanya jika key belum ada, atau nilai yang baru lebih rendah dari nilainya saat ini.</p>\n<p>Pertama kita harus persiapkan class <code>UpdateIfLowerScript</code> sebagai berikut (pahami sendiri):</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #2BA8FF\">public</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">class</span><span style=\"color: #FFFFFF\"> UpdateIfLowerScript </span><span style=\"color: #EFEFEF\">{</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">final</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Jedis</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">final</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">String</span><span style=\"color: #FFFFFF\"> sha</span><span style=\"color: #EFEFEF\">;</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">private</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">final</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">static</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">String</span><span style=\"color: #FFFFFF\"> script </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"local key = KEYS[1]\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\">  </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"local new = ARGS[1]\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\">  </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"local current = redis.call('GET', key)\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\">  </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"if (current == false or (tonumber(new) &lt; tonumber(current))) then\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"    redis.call('SET', key, new)\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"    return 1\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\">  </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"else\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"    return 0\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span><span style=\"color: #FFFFFF\"> </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #50E3C2\">\"end\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">+</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">public</span><span style=\"color: #FFFFFF\"> UpdateIfLowerScript</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #2BA8FF\">Jedis</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">{</span>\n<span style=\"color: #FFFFFF\">        this</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">jedis </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #FFFFFF\">        this</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">sha </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">scriptLoad</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">script</span><span style=\"color: #EFEFEF\">);</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #EFEFEF\">}</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #2BA8FF\">public</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">boolean</span><span style=\"color: #FFFFFF\"> updateIfLower</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #2BA8FF\">String</span><span style=\"color: #FFFFFF\"> key</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Integer</span><span style=\"color: #FFFFFF\"> newValue</span><span style=\"color: #EFEFEF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #EFEFEF\">{</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #2BA8FF\">List&lt;String&gt;</span><span style=\"color: #FFFFFF\"> keys </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Collections</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">singletonList</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">key</span><span style=\"color: #EFEFEF\">);</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #2BA8FF\">List&lt;String&gt;</span><span style=\"color: #FFFFFF\"> args </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">Collections</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">singletonList</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">newValue</span><span style=\"color: #EFEFEF\">);</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #2BA8FF\">Object</span><span style=\"color: #FFFFFF\"> response </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">evalsha</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">sha</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> keys</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> args</span><span style=\"color: #EFEFEF\">);</span>\n\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #FF0078\">return</span><span style=\"color: #FFFFFF\"> (</span><span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\">) response </span><span style=\"color: #EFEFEF\">==</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">1</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #EFEFEF\">}</span>\n<span style=\"color: #FFFFFF\">}</span></code></pre>\n<p>Selanjutnya, cara panggilnya ya tinggal buat aja instancenya, lalu panggil methodnya seperti dibawah ini:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #2BA8FF\">UpdateIfLowerScript</span><span style=\"color: #FFFFFF\"> script </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF0078\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">UpdateIfLowerScript</span><span style=\"color: #FFFFFF\">(jedis)</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #2BA8FF\">boolean</span><span style=\"color: #FFFFFF\"> result </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> script</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">updateIfLower</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #50E3C2\">'keynya'</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">100</span><span style=\"color: #EFEFEF\">);</span></code></pre>\n<p>Oia katanya biasanya bakal banyak script Lua di project Java kita, jadi supaya rapih sebisa mungkin dibuat 1 script 1 class, dan disimpan dalam 1 folder yang sama.</p>\n<p>Dan kenapa nggak pakai script Java aja langsung? seperti yang disinggung diatas, script Lua ini bersifat atomic.\nYang artinya script akan membloking eksekusi dari Redis Client lain sampai script Lua ini selesai dijalankan.\nJadi tidak ada transaksi dari Redis Client lain yang terselip ditengah-tengah Lua script ini.</p>\n<h2 id=\"4-pipelining-with-jedis\"><a href=\"#4-pipelining-with-jedis\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Pipelining with Jedis</h2>\n<p>Pembahasan selanjutnya adalah tentang penggunaan pipeline. Pada DBMS lain, istilah yang mirip-mirip dengan pipeline adalah transaction. Dengan pipeline kita bisa mengirim banyak perintah sekaligus sehingga Redis Client nggak perlu bolak-balik request-response ke Redis Server.</p>\n<p>Bayangin kamu ke warung mau beli mie instan dan saos. Jika kamu adalah Redis Client, secara default kamu akan bolak-balik, beli mie instan dulu, sampai rumah, kemudian balik lagi untuk beli saos, terus balik lagi ke rumah. Dengan pipeline, kamu (si Redis Client) akan membeli mie instan dan saos secara bersamaan. Efeknya? tentu saja mempercepat waktu eksekusi dan latency.</p>\n<p>Di Jedis sendiri, cara menggunakan pipeline adalah sebagai berikut:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> siteId </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">1L</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #2BA8FF\">Pipeline</span><span style=\"color: #FFFFFF\"> p </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">pipelined</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\">  </span><span style=\"color: #888\">// inisiasi pipeline</span>\n\n<span style=\"color: #2BA8FF\">Response&lt;Long&gt;</span><span style=\"color: #FFFFFF\"> hsetResponse </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> p</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">hset</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">statusKey</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #50E3C2\">\"available\"</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #50E3C2\">\"true\"</span><span style=\"color: #EFEFEF\">);</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// push hset command to pipeline</span>\n<span style=\"color: #2BA8FF\">Response&lt;Long&gt;</span><span style=\"color: #FFFFFF\"> expireResponse </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> p</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">expire</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">statusKey</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">1000</span><span style=\"color: #EFEFEF\">);</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// push expire command to pipeline</span>\n<span style=\"color: #2BA8FF\">Response&lt;Long&gt;</span><span style=\"color: #FFFFFF\"> saddResponse </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> p</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">sadd</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">availableKey</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">String</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">valueOf</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">siteId</span><span style=\"color: #EFEFEF\">));</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// push sadd command to pipeline</span>\n\n<span style=\"color: #FFFFFF\">p</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">sync</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// run pipeline to execute all commands</span>\n\n<span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> hsetResult </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> hsetResponse</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// get result from p.hset</span>\n<span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> expireResult </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> expireResponse</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// get result from p.expire</span>\n<span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> saddResult </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> saddResponse</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// get result from p.sadd</span></code></pre>\n<p>Dengan pipeine seperti diatas, 3 perintah akan dikirim ke Redis Server secara bersamaan.\nHanya saja, sifat pipeline tidak seperti transaksi, dimana jika salah satunya gagal, Redis tidak akan merollback command sebelumnya. Dan juga saat pipeline berjalan, katakanlah kita mengirim 100 perintah, kemudian pada perintah ke 70 ada Redis Client mengirim perintah juga, maka perintah dari Redis Client lain akan berjalan ditengah-tengah pipeline.</p>\n<h2 id=\"5-transactions-with-jedis\"><a href=\"#5-transactions-with-jedis\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Transactions with Jedis</h2>\n<p>Pembahasan selanjutnya adalah tentang transaction. Transaction di Redis ini mirip-mirip dengan pipeline,\nhanya saja transaction mendukung atomic transaction. Jika kita menjalankan 5 perintah menggunakan transaction,\nmaka jika ada Redis Client lain mengirim perintah ke Redis Server yang sama, maka Redis Client lain tersebut harus menunggu sampai 5 perintah kita selesai dijalankan.</p>\n<p>Contoh menerapkan transaction menggunakan Jedis:</p>\n<pre class=\"shiki\" style=\"background-color: #191d21\"><code><span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> siteId </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">1L</span><span style=\"color: #EFEFEF\">;</span>\n<span style=\"color: #2BA8FF\">Transaction</span><span style=\"color: #FFFFFF\"> t </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> jedis</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">multi</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\">  </span><span style=\"color: #888\">// inisiasi transaction</span>\n\n<span style=\"color: #2BA8FF\">Response&lt;Long&gt;</span><span style=\"color: #FFFFFF\"> hsetResponse </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> t</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">hset</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">statusKey</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #50E3C2\">\"available\"</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #50E3C2\">\"true\"</span><span style=\"color: #EFEFEF\">);</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// push hset command to transaction</span>\n<span style=\"color: #2BA8FF\">Response&lt;Long&gt;</span><span style=\"color: #FFFFFF\"> expireResponse </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> t</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">expire</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">statusKey</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">1000</span><span style=\"color: #EFEFEF\">);</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// push expire command to transaction</span>\n<span style=\"color: #2BA8FF\">Response&lt;Long&gt;</span><span style=\"color: #FFFFFF\"> saddResponse </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> t</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">sadd</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">availableKey</span><span style=\"color: #EFEFEF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #2BA8FF\">String</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">valueOf</span><span style=\"color: #EFEFEF\">(</span><span style=\"color: #FFFFFF\">siteId</span><span style=\"color: #EFEFEF\">));</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// push sadd command to transaction</span>\n\n<span style=\"color: #FFFFFF\">t</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">exec</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// run transaction to execute all commands</span>\n\n<span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> hsetResult </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> hsetResponse</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// get result from t.hset</span>\n<span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> expireResult </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> expireResponse</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// get result from t.expire</span>\n<span style=\"color: #2BA8FF\">Long</span><span style=\"color: #FFFFFF\"> saddResult </span><span style=\"color: #EFEFEF\">=</span><span style=\"color: #FFFFFF\"> saddResponse</span><span style=\"color: #EFEFEF\">.</span><span style=\"color: #FFFFFF\">get</span><span style=\"color: #EFEFEF\">();</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #888\">// get result from t.sadd</span></code></pre>\n<h2 id=\"kapan-harus-menggunakan-lua-script-pipeline-dan-transaction\"><a href=\"#kapan-harus-menggunakan-lua-script-pipeline-dan-transaction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kapan Harus Menggunakan Lua Script, Pipeline, dan Transaction?</h2>\n<ol>\n<li>Jika kamu membolehkan ada query dari client lain berjalan di tengah-tengah multiple query, gunakan Pipeline.</li>\n<li>Jika kamu tidak ingin ada query dari client lain berjalan di tengah-tengah multiple query, gunakan Transaction.</li>\n<li>Jika kamu ingin menggunakan conditional statement di tengah-tengah eksekusi multiple query, gunakan Lua Script.</li>\n</ol>\n<hr>\n<p>Begitulah topik pembahasan di kelas RU102J di minggu ke-2. Yaudah, sampai jumpa lagi di minggu selanjutnya.</p>\n","description":"Catatan kelas Redis University RU102 minggu ke-2","timeToRead":5,"cover":"/images/posts/ru102j-w2-cover.png","coverThumb":"/images/posts/ru102j-w2-cover.png","fullscreen":false,"author":{"id":"Muhammad Syifa","title":"Muhammad Syifa","path":"/author/Muhammad%20Syifa/"},"tags":[{"id":"Redis University","title":"Redis University","path":"/tag/Redis%20University/"},{"id":"Course","title":"Course","path":"/tag/Course/"},{"id":"RU102J","title":"RU102J","path":"/tag/RU102J/"}]}},"context":{}}