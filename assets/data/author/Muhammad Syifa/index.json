{"hash":"1edf71e944044bc70c25b692f010f187723da530","data":{"author":{"id":"Muhammad Syifa","title":"Muhammad Syifa","path":"/author/Muhammad%20Syifa/","belongsTo":{"totalCount":13,"pageInfo":{"totalPages":3,"currentPage":1},"edges":[{"node":{"id":"2b3b2b58bbdb992a1d436929bce29ac4","title":"Ngoding Laravel dengan Gaya, pakai Laravel Evo","datetime":"2021-07-21 11:00:00","path":"/artikel/tentang-laravel-evo/","content":"<p>Beberapa waktu lalu, saya membuat video cara membuat <em>framework</em> kekinian di <a href=\"https://www.youtube.com/channel/UCUDiqWobOUKHKz-KOkn5WYQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">kanal youtube saya</a>. Pada <em>framework</em> tersebut, saya menerapkan fitur terbaru pada <em>PHP</em> 8, yaitu <em>attribute</em>.</p>\n<p>Dan tidak lama setelahnya, saya coba menerapkan hal yang sama ke <em>Laravel</em>, dengan membuat <em>package</em> khusus <em>Laravel</em> yang saya beri nama <em>Evo</em>.</p>\n<p>Berikut ini adalah contoh controller saat menggunakan <em>Evo</em> (baris yang di-<em>highlight</em> adalah kode khusus <em>Evo</em>):</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"TodoController.php\" highlight=\"1,4,5,7-10,18\">TodoController.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">#[</span><span style=\"color: #82AAFF\">RoutePrefix</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">todos</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)]</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">TodoController</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    #[</span><span style=\"color: #F07178\">Put</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">{id}</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)]</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    #[Authenticated]</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">update</span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        #</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #A6ACCD\">Param</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> int $id</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        #</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #A6ACCD\">Body</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> UpdateTodoDTO $data</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        #</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #A6ACCD\">LoggedUser</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> User $user</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">):</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">UpdateTodoResponse</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Todo</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\">:</span><span style=\"color: #82AAFF\">findOrFail</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">$id</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">title</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">$data</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">title</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">is_completed</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">$data</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">completed</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">completed_by</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">$user</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">completed_at</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">date</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Y-m-d H:i:s</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">save</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">UpdateTodoResponse</span><span style=\"color: #F07178\">::</span><span style=\"color: #82AAFF\">fromArray</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">$todo</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">toArray</span><span style=\"color: #F07178\">())</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Buat kamu yang pernah mencoba <em>Nest.js</em>, mungkin familiar dengan kode diatas.\nKarena memang saya terinspirasi dari <em>Nest.js</em>.</p>\n<p>Pertanyaannya, untuk apa? gaya-gayaan doang atau ada maksudnya?</p>\n<p>Nah pada artikel ini, saya mau ceritakan manfaat dari penerapan kode seperti di atas.</p>\n<p>Btw, artikel ini saya tujukan orang-orang yang sudah pernah mengembangkan aplikasi dengan <em>Laravel</em>/<em>Lumen</em>. Jadi mungkin untuk yang belum pernah coba framework tersebut, akan sulit untuk memahami maksudnya.</p>\n<h4 id=\"memperjelas-spesifikasi-api-kamu\"><a href=\"#memperjelas-spesifikasi-api-kamu\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Memperjelas Spesifikasi API Kamu</h4>\n<p>Bayangin, kamu baru saja menjadi back-end developer di sebuah perusahaan, dan kamu mendapati kode controller seperti di bawah ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">store</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Request</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Invoice</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">findOrFail</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">invoice_id</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">result</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">invoice</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">toArray</span><span style=\"color: #89DDFF\">();</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(!$</span><span style=\"color: #A6ACCD\">invoice</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">is_paid</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">throw</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">InvoiceAlreadyPaidException</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #FFCB6B\">DB</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">beginTransaction</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Payment</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">invoice_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">method </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">payment_method</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">user_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">()-&gt;</span><span style=\"color: #82AAFF\">id</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">amount </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">amount</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">payment_method </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bank_transfer</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">      </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">account_number </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">account_number</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">bank_id </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">bank_id</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">bank </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Bank</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">findOrFail</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">request</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">bank_id</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">result</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bank_name</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">bank</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">save</span><span style=\"color: #89DDFF\">();</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">is_paid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">save</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #FFCB6B\">DB</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">commit</span><span style=\"color: #89DDFF\">();</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">result </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">array_merge</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">result</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">toArray</span><span style=\"color: #89DDFF\">());</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">response</span><span style=\"color: #89DDFF\">()-&gt;</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">result</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Hayo coba tebak, pada kode tersebut inputannya apa aja, dan struktur dari result-nya seperti apa?</p>\n<p>Sulit kan? tentu saja. Karena Programmernya menaruh inputan dan result di sembarang tempat, sehingga kita harus jeli melihat setiap baris untuk mengetahui input dan outputnya seperti apa. Itupun ga bisa hanya dilihat dari file itu aja, pada bagian <code>$result['invoice'] = $invoice->toArray()</code>, untuk tahu isi dari invoice, kita juga harus lihat struktur database pada table invoice. Ribet.</p>\n<p>Dengan <em>Evo</em>, kita dapat mendefinisikan input dan output langsung pada bagian kepala dari fungsi/method. Sehingga Programmer yang baru gabung, ga perlu membaca logika program hanya untuk tahu inputnya ada apa saja, dan outputnya akan seperti apa.</p>\n<p>Berikut adalah kode diatas, ditulis dengan cara <em>Evo</em>:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #676E95\">#[Post]</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">store</span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[Body] StorePaymentDTO $data,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[LoggedUser] User $user,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">):</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">StorePaymentResponse</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">// logic program yang kurang lebih sama</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Untuk melihat inputnya seperti apa, pada VSCode dengan intelephense, kamu cukup tekan <code>ctrl</code> sambil arahkan cursor ke <code>StorePaymentDTO</code>. Dan kamu akan diperlihatkan <code>class</code> seperti ini, dimana propertinya adalah data dari request body.</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"StorePaymentDTO.php\">StorePaymentDTO.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">StorePaymentDTO</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">DTO</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice_id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">float</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">amount</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">payment_method</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">account_number</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #C792EA\">int</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">bank_id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Begitu pula untuk mengetahui struktur dari output. Cukup arahkan ke <code>StorePaymentResponse</code>, dan kamu akan diperlihatkan <code>class</code> dengan property seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">StorePaymentDTO</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">JsonResponse</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">float</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">amount</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">user_id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">method</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">account_number</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #C792EA\">int</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">bank_id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">bank_name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">InvoiceDTO</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">invoice</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Disana terlihat jelas, isinya apa saja, tipe datanya apa, serta nullable atau tidaknya.</p>\n<h4 id=\"membiasakan-diri-membuat-arah-yang-jelas\"><a href=\"#membiasakan-diri-membuat-arah-yang-jelas\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Membiasakan Diri membuat Arah yang Jelas</h4>\n<p>Programming pada dasarnya hanyalah tentang bagaimana memproses input menjadi output.\nInput adalah apa yang kita (Programmer) miliki, sedangkan output adalah hal yang kita tuju.\nMelakukan coding tanpa tahu inputnya apa saja, dan outputnya akan seperti apa, sama seperti bepergian tanpa tahu isi tas/dompet ada apa aja, dan ga tahu mau kemana, alias luntang-lantung.</p>\n<p>Menulis kode dengan cara <em>Evo</em>, melatih kamu untuk terbiasa mendefinisikan input dan output sebelum menuliskan logika program. Membiasakan kamu menyiapkan perbekalan dan menentukan tujuan sebelum bepergian.</p>\n<h4 id=\"menjaga-keharmonisan-antara-back-end-dengan-mobile-developer\"><a href=\"#menjaga-keharmonisan-antara-back-end-dengan-mobile-developer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Menjaga Keharmonisan antara Back-end dengan Mobile Developer</h4>\n<p>Kekurangan dari membuat <em>RESTful API</em> dengan bahasa yang <em>dynamic typing</em> seperti PHP atau Javascript adalah seringkali kita khilaf, lupa melakukan <em>casting</em> tipe data. Sedangkan aplikasi mobile biasanya dibuat menggunakan bahasa pemrograman yang <em>static typing</em>, yang mana salah mengirimkan tipe data bisa berakibat fatal. Hal ini seringkali menimbulkan perselisihan antara <em>mobile developer</em> dan <em>back-end developer</em>.</p>\n<p><em>Evo</em> mencegah ini dengan melakukan <em>automatic type casting</em>, dimana setiap request dan response akan otomatis di cast sesuai dengan tipe data yang kita definisikan pada <em>DTO</em> maupun <em>Response class</em>.</p>\n<p>Sebagai contoh, kita disuruh membuat response dengan struktur seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">id</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">title</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">lorem ipsum dolor sit amet</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">is_completed</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">false,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">created_at</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2021-01-02 03:04:05</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Pada database MySQL, boolean itu diwakili dengan tipe data integer berisi 0 dan 1, yang kalau kita asal kirim isi dari database, maka mobile developer akan mendapatkan integer <code>0</code> atau <code>1</code>, lebih parahnya lagi malah kadang string <code>\"0\"</code> atau <code>\"1\"</code>.</p>\n<p>Dengan <em>Evo</em>, saat kamu mengirimkan response class seperti di bawah ini.</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"StoreTodoResponse.php\">StoreTodoResponse.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">StoreTodoResponse</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">JsonResponse</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">title</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">bool</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">is_completed</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">created_at</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p><em>Evo</em> akan otomatis melakukan type casting, <code>id</code> menjadi integer, <code>title</code> menjadi string, <code>is_completed</code> menjadi boolean, dan <code>created_at</code> menjadi string.</p>\n<h4 id=\"validasi-otomatis\"><a href=\"#validasi-otomatis\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Validasi Otomatis</h4>\n<p><em>Evo</em> melakukan pengecekan tipe data pada seluruh inputan yang dikirimkan dari HTTP request, entah itu <code>header</code>-nya, <code>query</code>-nya, <code>parameter</code>-nya, <code>cookie</code>-nya, serta <code>body</code>-nya.</p>\n<p>Contoh, saat kamu menuliskan <code>#[Query] int $page</code>, <em>Evo</em> akan menolak request dengan URL seperti <code>?page=bukan-angka</code>.</p>\n<p>Untuk validasi lebih <em>advance</em>-pun di <em>Evo</em> lebih jelas dengan atribut, contohnya ini:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"RegisterDTO\">RegisterDTO</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">RegisterDTO</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">DTO</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[Email(message: &quot;Emailnya ga valid wei&quot;)]</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[Unique(table: &quot;users&quot;, column: &quot;email&quot;, message: &quot;Email sudah kepakai bro&quot;)]</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">email</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[Min(6, message: &quot;Password minimal 6 karakter gan&quot;)]</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[Max(255, message: &quot;Kepanjangan jir&quot;)]</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">password</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">#[Max(255, &quot;Panjang amat! itu nama apa paragraf&quot;)]  </span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Disitu kita menuliskan validasi lewat atribut, yang mana lebih ramah untuk <em>Text Editor</em> atau <em>IDE</em>. Jadi kalau kamu lupa parameternya, <em>IDE</em>/<em>Text Editor</em> akan bantu mengingatkan tanpa kamu perlu bolak-balik buka dokumentasi <em>Laravel</em>. Keuntungan ini ga bisa kamu dapatkan dengan penjabaran <em>validation rules</em> via <em>string</em> ala <em>Laravel</em>.</p>\n<h4 id=\"lebih-mudah-dibaca-mesin\"><a href=\"#lebih-mudah-dibaca-mesin\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lebih Mudah dibaca Mesin</h4>\n<p>Saat menjabarkan input dan output dengan cara <em>Evo</em>, tidak cuma tim kamu yang bisa dengan mudah membaca spesifikasi API kamu. Tapi mesin juga.</p>\n<p>Terus kenapa kalau bisa dibaca mesin?</p>\n<p>Saat mesin bisa memahami keinginan kita, kita bisa menyuruh mesin membuatkan sesuatu untuk kita. Saat ini saya sedang membuatkan Swagger generator pada <em>Evo</em>. <em>Evo</em> akan membaca kode kamu dan menampilkan dokumentasi API secara otomatis, tanpa perlu kamu menuliskan OpenAPI secara manual. </p>\n<p>Yap, untuk yang ini memang masih tahap pengembangan. Tapi hal ini sangat memungkinkan. Karena di <em>Nest.js</em> pun begitu.</p>\n<p>Malah mungkin ga cuma Swagger generator. Tapi juga test generator, jadi <em>Evo</em> akan generate file test serta assertionnya secara otomatis mengikuti spesifikasi yang kita tuliskan.</p>\n<h2 id=\"penutup\"><a href=\"#penutup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Penutup</h2>\n<p>Itulah beberapa alasan kenapa saya membuat tools yang memanfaatkan penuh fitur atribut seperti pada <em>Evo</em> ini. Jadi bukan cuma untuk gaya-gayaan ya, banyak juga kok manfaatnya.</p>\n<p>Untuk <em>Evo</em> ini masih saya kembangkan sambil saya gunakan pada side-project saya.\nKalau kamu mau intip-intip pengembangannya bisa mampir ke <a href=\"https://github.com/emsifa/evo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/emsifa/evo</a>.</p>\n<p>Sekian tulisan kali ini. Dadah ~</p>\n","excerpt":"Beberapa waktu lalu, saya membuat video cara membuat framework kekinian di kanal youtube saya. Pada framework tersebut, saya menerapkan fitur terbaru pada PHP 8, yaitu attribute. Dan tidak lama","description":"Laravel Evo bukan cuma tools untuk mempermudah coding, tapi juga melatih kebiasaan coding yang baik. Kok bisa?","tags":[{"id":"Laravel","title":"Laravel","path":"/tag/Laravel/"},{"id":"Evo","title":"Evo","path":"/tag/Evo/"}]}},{"node":{"id":"116ffefcd4827a27cdb836df5a968e9d","title":"Cegah XSS dengan Content-Security-Policy","datetime":"2020-01-24 11:00:00","path":"/artikel/cegah-xss-dengan-csp/","content":"<p>Kemarin lusa (1/22), saya menerima laporan dari admin website kementerian yang saya buat kalau\nwebnya mengalami kendala hanya menampilkan <em>preloader</em> saja. Setelah saya cek melalui <em>devtools browser</em>,\npada bagian console, saya mendapati kalau <em>browser</em> tidak diizinkan untuk me-<em>load</em> <em>javascript</em>, <em>css</em>, maupun <em>font</em> yang berasal\ndari <a href=\"https://cdnjs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cdnjs</a> dan <a href=\"https://unpkg.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">unpkg</a>. Alhasil sebagian script yang dibutuhkan\ntidak di-<em>load</em>, yaudah, rusak deh. Kurang lebih penampakan errornya (di Firefox) kayak gini:</p>\n<p><img src=\"/images/posts/ss-csp-error.png\" alt=\"CSP Error\"></p>\n<p>Ternyata sebelumnya dari pihak IT pusat sana, web servernya baru disetting untuk mengirimkan <em>header</em> <code>Content-Security-Policy</code> yang berisikan <em>whitelist</em> <em>host</em> mana saja yang diperbolehkan untuk di-<em>load</em> oleh website-website yang berada pada server naungan mereka, dan <em>cdnjs.cloudflare.com</em> serta <em>unpkg.com</em> tidak terdaftar dalam <em>whitelist</em> tersebut. Karena saya cuma dikasih akses ke sebagian fitur <em>cpanel</em>-nya aja, alhasil yang saya lakukan adalah mengunduh semua <em>resource</em> pada <em>CDN</em>, dan mengunggahnya ke server mereka, lalu mengubah kode <em>HTML</em> dari yang tadinya load ke <em>URL</em> <em>CDN</em> menjadi load ke <em>URL</em> website itu sendiri.</p>\n<p>Apa yang dilakukan IT pihak pusat memang sudah benar, yaitu mencegah potensi <em>XSS</em> dari berbagai website yang dikembangkan berbagai developer (dan vendor) yang hosting websitenya ke server mereka, dimana jika ada salah satu website saja <em>vuln</em>, maka website lain bisa terpengaruh karenanya.</p>\n<p>Setelah kejadian ini saya baca-baca lagi tentang <strong><em>Content-Security-Policy (CSP)</em></strong>, dan <del>supaya menjadi manfaat</del> karena blog saya udah lama ga update, saya tulis sekalian disini.</p>\n<blockquote>\n<p>Setelah ini saya akan singkat <strong><em>Content-Security-Policy</em></strong> menjadi <strong><em>CSP</em></strong> saja.</p>\n</blockquote>\n<h2 id=\"apa-itu-csp\"><a href=\"#apa-itu-csp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Apa itu <em>CSP</em>?</h2>\n<p><em>CSP</em> adalah <em>HTTP Response Header</em> atau <em>Meta Tag</em> untuk mengatur <strong>resource dari sumber mana saja</strong>\nyang diperbolehkan untuk dieksekusi oleh <em>web browser</em> (yang <a href=\"https://caniuse.com/#search=CSP\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mendukung <em>CSP</em></a> tentunya).</p>\n<p>Yang dimaksud <em>resource</em> disini itu ya <a href=\"https://en.wikipedia.org/wiki/Web_resource\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>web resource</em></a>, seperti <em>javascript</em>, <em>css</em>, <em>font</em>, <em>image</em>, <em>video</em>, <em>audio</em>, dsb.</p>\n<p>Dengan <em>CSP</em> kita dapat meminimalisir potensi-potensi serangan XSS pada website kita dengan memerintahkan <em>browser</em> untuk jangan me-<em>load</em> dan mengeksekusi <em>resource</em> dari sumber yang tidak kita inginkan.</p>\n<h2 id=\"apa-yang-bisa-kita-lakukan-dengan-csp\"><a href=\"#apa-yang-bisa-kita-lakukan-dengan-csp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Apa yang Bisa Kita Lakukan dengan <em>CSP</em>?</h2>\n<p>Dengan memberikan <em>CSP</em> ke halaman web kamu, kamu dapat:</p>\n<ul>\n<li>Mencegah <em>browser</em> untuk mengeksekusi <em>inline script</em> (<em>javascript</em> di <em>HTML</em>).</li>\n<li>Mencegah <em>browser</em> untuk mengeksekusi <code>eval</code>.</li>\n<li>Mencegah <em>browser</em> untuk mengeksekusi <em>inline style</em>.</li>\n<li>Mencegah <em>browser</em> untuk mengeksekusi <em>script</em>, <em>css</em>, <em>font</em>, gambar, video, suara, dsb diluar host yang kita tentukan.</li>\n<li>Mencegah <em>browser</em> untuk submisi form yang <code>action</code>-nya menuju ke host yang tidak kita daftarkan.</li>\n<li>Mencegah <em>browser</em> untuk menjalankan <em>Ajax</em>, maupun <em>WebSocket</em> diluar host yang kita tentukan.</li>\n<li>dll.</li>\n</ul>\n<h2 id=\"bagaimana-csp-dapat-mencegah-xss\"><a href=\"#bagaimana-csp-dapat-mencegah-xss\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bagaimana <em>CSP</em> dapat Mencegah <em>XSS</em>?</h2>\n<p>Serangan <em>XSS</em> umumnya berasal dari form yang disubmit oleh user, yang kemudian isian dari form tersebut di-<em>render</em> ke user lain sebagai kode <em>HTML</em> (tidak di-<em>escaping</em>).</p>\n<p>Contoh sederhananya adalah form komentar. Misalkan ada user memasukkan kode <code>&#x3C;script>alert('oi')&#x3C;/script></code> pada kolom komentar,  dan <em>server-side</em> tidak melakukan <em>escaping</em> terhadap data komentar tersebut, yang terjadi saat komentar tersebut di-<em>render</em> ke user lain adalah <em>browser</em> akan mengeksekusi <em>inline script</em>-nya dan menampilkan alert ke user.</p>\n<p>Dengan <em>CSP</em>, kita dapat menghindari hal ini dengan cara memerintahkan browser untuk jangan eksekusi <em>inline script</em>, melalui <em>response header</em> ataupun <em>meta tag</em> si <em>CSP</em>. Jadi sekalipun developer khilaf tidak melakukan <em>escaping</em>, serangan <em>XSS</em> dapat dihindari.</p>\n<p>Benefitnya akan sangat terasa kalau kamu punya website atau sedang mengelola server yang memiliki puluhan sampai ratusan halaman yang menampilkan data hasil inputan form didalamnya. Dengan <em>CSP</em> kamu cukup setting http server kamu (<em>nginx</em>/<em>apache</em>/dsb) untuk mengirimkan header <em>CSP</em>, dan <em>boom!</em> kamu tidak perlu lagi khawatir tentang <em>XSS</em>. Tapi sebelum melakukan ini, lebih baik kamu komunikasikan dulu hal ini ke tim developer, supaya ga ada kejadian seperti saya yang mengalami error saat production karena menggunakan <em>resource</em> dari sumber yang tidak \"direstui\".</p>\n<h2 id=\"penulisan-csp\"><a href=\"#penulisan-csp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Penulisan <em>CSP</em></h2>\n<p>Seperti yang sudah saya bilang sebelumnya, <em>CSP</em> dapat kita tuliskan pada <em>response header</em>, ataupun <em>meta tag</em>.\nHanya saja, artikel yang saya baca di halaman <a href=\"https://developers.google.com/web/fundamentals/security/csp#the_meta_tag\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Developers</a> lebih menyarankan menggunakan <em>response header</em>. Jadi disini saya akan mencontohkan menggunakan <em>response header</em> saja.</p>\n<p>Untuk penulisan <em>header CSP</em>, formatnya adalah sebagai berikut:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">Content-Security-Policy: &lt;policy-directive-1&gt;; &lt;policy-directive-2&gt;; &lt;policy-directive-n&gt;</span></span></code></pre></div>\n<p>Sedangkan untuk penulisan <code>&#x3C;policy-directive></code> formatnya adalah seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">&lt;directive-a&gt; &lt;source-1&gt; &lt;source-2&gt; &lt;source-n&gt;</span></span></code></pre></div>\n<p>Sebagai contoh, jika kita hanya memperbolehkan <em>load</em> <em>script</em> dan <em>css</em> dari <code>web-a.com</code> dan <code>web-b.com</code>,\nkita dapat menuliskan <em>CSP</em> seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">Content-Security-Policy: script-src https://web-a.com https://web-b.com; style-src https://web-a.com https://web-b.com</span></span></code></pre></div>\n<p>Pada contoh diatas kita menggunakan <em>directive</em> <code>script-src</code> dan <code>style-src</code>.\nDibawah ini adalah daftar beberapa <em>directive</em> yang dapat kamu gunakan:</p>\n<ul>\n<li><code>connect-src</code>: membatasi akses ajax (<em>XMLHttpRequest</em>), <em>WebSocket</em>, dan <em>EventSource</em>.</li>\n<li><code>font-src</code>: membatasi akses font.</li>\n<li><code>img-src</code>: membatasi akses image.</li>\n<li><code>script-src</code>: membatasi akses script.</li>\n<li><code>style-src</code>: membatasi akses style (css).</li>\n<li><code>media-src</code>: membatasi akses video dan audio.</li>\n<li><code>worker-src</code>: membatasi akses service worker.</li>\n<li><code>child-src</code>: membatasi akses iframe dan worker.</li>\n<li><code>form-action</code>: membatasi <code>action</code> dari form.</li>\n<li><code>default-src</code>: kalau kamu malas jabarkan satu-persatu, kamu bisa gunakan ini untuk membatasi semua hal diatas.</li>\n</ul>\n<p>Daftar diatas bisa saja bertambah atau berubah suatu saat, untuk itu, selebihnya bisa kamu pelajari sendiri pada artikel <a href=\"https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>CSP</em> di Google Developers</a> atau panduan <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#Directives\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>CSP</em> di MDN</a>.</p>\n<p>Selanjutnya, selain mendaftarkan <em>host</em> apa saja yang diperbolehkan, <em>CSP</em> juga memiliki beberapa keyword yang dapat kamu gunakan sebagai <code>&#x3C;source></code> seperti dibawah ini:</p>\n<ul>\n<li><code>'self'</code>: untuk memperbolehkan <em>browser</em> load resource dari domain yang sama dengan website di-<em>load</em>.</li>\n<li><code>'unsafe-inline'</code>: untuk memperbolehkan <em>browser</em> mengeksekusi <em>inline script</em> ataupun <em>inline style</em>.</li>\n<li><code>'unsafe-eval'</code>: untuk memperbolehkan <em>browser</em> mengeksekusi fungsi javascript <code>eval</code>.</li>\n<li><code>'none'</code>: jika kamu tidak memperbolehkan <em>browser</em> load resource dari sumber manapun.</li>\n</ul>\n<blockquote>\n<p>Keyword diatas harus kamu tulis dengan menyertakan tanda petik tunggal.</p>\n</blockquote>\n<h2 id=\"contoh-penerapan-csp\"><a href=\"#contoh-penerapan-csp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Contoh Penerapan <em>CSP</em></h2>\n<p>Pada bagian ini saya menuliskan contoh-contoh <em>CSP</em> umum yang mungkin banyak orang butuhkan.\nDisini dimisalkan saya <em>host</em> halaman-halaman contoh ini pada <code>https://www.emsifa.com</code>.</p>\n<blockquote>\n<p>Disini saya akan menggunakan PHP supaya lebih ringkas aja.</p>\n</blockquote>\n<h4 id=\"1-memperbolehkan-semua-jenis-resource-dari-domain-yang-sama\"><a href=\"#1-memperbolehkan-semua-jenis-resource-dari-domain-yang-sama\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Memperbolehkan Semua Jenis Resource dari Domain yang Sama</h4>\n<p>Dari kebutuhan diatas, kita dapat terjemahkan menjadi:</p>\n<ul>\n<li>Semua Jenis Resource: <code>default-src</code></li>\n<li>Dari Domain yang Sama: <code>'self'</code></li>\n</ul>\n<p>Jadi penerapan <em>CSP</em>-nya adalah sebagai berikut:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"contoh-1.php\" highlight=\"2\">contoh-1.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">header</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Content-Security-Policy: default-src &#39;self&#39;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">html</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.emsifa.com/js/app.js</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://cdnjs.cloudflare.com/jquery/jquery.min.js</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #82AAFF\">alert</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">html</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div>\n<p>Pada contoh diatas, script <code>app.js</code> akan di-<em>load</em> dan dieksekusi oleh browser, sedangkan script jQuery tidak akan dieksekusi karena berada pada host <code>cdnjs.cloudflare.com</code>, dan script <code>alert('hello')</code> dibawahnya juga tidak akan dieksekusi karena kita tidak mendaftarkan <code>'unsafe-inline'</code> pada header CSP.</p>\n<h4 id=\"2-memperbolehkan-semua-jenis-resource-dari-sumber-yang-sama-dan-cdnjs\"><a href=\"#2-memperbolehkan-semua-jenis-resource-dari-sumber-yang-sama-dan-cdnjs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Memperbolehkan Semua Jenis Resource dari Sumber yang Sama dan CDN.js</h4>\n<p>Dari kebutuhan diatas, kalau kita terjemahkan kedalam CSP, menjadi:</p>\n<ul>\n<li>Semua Jenis Resource: <code>default-src</code></li>\n<li>Sumber yang sama dan CDN.js: <code>'self' https://cdnjs.cloudflare.com</code></li>\n</ul>\n<p>Kalau kita terapkan ke <em>CSP</em> akan menjadi:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"contoh-2.php\" highlight=\"2\">contoh-2.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">header</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Content-Security-Policy: default-src &#39;self&#39; https://cdnjs.cloudflare.com</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">html</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.emsifa.com/js/app.js</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://cdnjs.cloudflare.com/jquery/jquery.min.js</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #82AAFF\">alert</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">html</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div>\n<p>Pada contoh diatas, <code>app.js</code> dan jQuery akan di-<em>load</em> oleh <em>browser</em>, sedangkan script <code>alert('hello')</code> tetap diblokir oleh <em>browser</em>.</p>\n<h4 id=\"3-hanya-memperbolehkan-script-css-dan-image-dari-hosting-sendiri-tidak-memperbolehkan-video-dan-audio-apapun-tapi-memperbolehkan-embed-video-youtube\"><a href=\"#3-hanya-memperbolehkan-script-css-dan-image-dari-hosting-sendiri-tidak-memperbolehkan-video-dan-audio-apapun-tapi-memperbolehkan-embed-video-youtube\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Hanya Memperbolehkan <em>Script</em>, <em>CSS</em>, dan <em>Image</em> dari <em>Hosting</em> Sendiri, tidak Memperbolehkan Video dan Audio Apapun, tapi memperbolehkan Embed Video Youtube</h4>\n<p>Oke, kita coba terjemahkan dulu kebutuhan diatas:</p>\n<ul>\n<li>Hanya Memperbolehkan Script CSS dan Image dari Hosting sendiri: artinya kita memerlukan 3 buah directive yaitu <code>script-src</code>, <code>style-src</code>, dan <code>img-src</code> yang memperbolehkan <code>'self'</code>.</li>\n<li>Tidak memperbolehkan Video dan Audio Apapun: artinya kita perlu menuliskan directive <code>media-src</code> menjadi <code>'none'</code>.</li>\n<li>Tapi memperbolehkan Embed Video Youtube: artinya kita perlu menuliskan directive <code>child-src</code> ke <code>https://youtube.com</code>.</li>\n</ul>\n<p>Kalau kita terapkan ke header <em>CSP</em> menjadi seperti ini:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"contoh-3.php\" highlight=\"2\">contoh-3.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">header</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Content-Security-Policy: script-src &#39;self&#39;; style-src &#39;self&#39;; img-src: &#39;self&#39;; media-src &#39;none&#39;; child-src https://youtube.com</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">html</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">head</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">link rel</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">stylesheet</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> href</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.emsifa.com/css/style.css</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">link rel</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">stylesheet</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> href</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://cdnjs.cloudflare.com/bootstrap/css/bootstrap.min.css</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">style</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    img </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> width</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #A6ACCD\">px</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">style</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">head</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">img src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.emsifa.com/img/logo.png</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">/&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">img src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.w3schools.com/img/logo.png</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">/&gt;</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">iframe width</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">560</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> height</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">315</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.youtube.com/embed/pTGRpH2dvRM</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> frameborder</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> allow</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> allowfullscreen</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">iframe</span><span style=\"color: #89DDFF\">&gt;</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://www.emsifa.com/js/app.js</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script src</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://cdnjs.cloudflare.com/jquery/jquery.min.js</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #82AAFF\">alert</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)&lt;/</span><span style=\"color: #A6ACCD\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #A6ACCD\">html</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div>\n<p>Dari seluruh resource pada kode HTML diatas, hasilnya adalah seperti ini:</p>\n<ol>\n<li>style <code>https://www.emsifa.com/css/style.css</code>: ✔.</li>\n<li>style <code>https://cdnjs.cloudflare.com/bootstrap/css/bootstrap.min.css</code>: ❌.</li>\n<li>inline style <code>img {width: 100px}</code>: ❌.</li>\n<li>image <code>https://www.emsifa.com/img/logo.png</code>: ✔.</li>\n<li>image <code>https://www.w3schools.com/img/logo.png</code>: ❌.</li>\n<li>iframe <code>https://www.youtube.com/embed/pTGRpH2dvRM</code>: ✔.</li>\n<li>script <code>https://www.emsifa.com/js/app.js</code>: ✔.</li>\n<li>script <code>https://cdnjs.cloudflare.com/jquery/jquery.min.js</code>: ❌.</li>\n<li>inline script <code>alert('hello')</code>: ❌.</li>\n</ol>\n<h2 id=\"penutup\"><a href=\"#penutup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Penutup</h2>\n<p>Jadi seperti itulah <em>CSP</em>, bagaimana penulisannya, serta beberapa contohnya.\nArtikel ini saya adaptasi dari 2 link dibawah ini:</p>\n<ul>\n<li><a href=\"https://developers.google.com/web/fundamentals/security/csp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.google.com/web/fundamentals/security/csp</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n</ul>\n<p>Yaudah, sekian dulu artikel kali ini. Semoga bermanfaat, dah ~ </p>\n","excerpt":"Kemarin lusa (1/22), saya menerima laporan dari admin website kementerian yang saya buat kalau webnya mengalami kendala hanya menampilkan preloader saja. Setelah saya cek melalui devtools browser,","description":"Gunakan CSP untuk mencegah browser eksekusi script dari sumber yang tidak diinginkan","tags":[{"id":"Web","title":"Web","path":"/tag/Web/"},{"id":"XSS","title":"XSS","path":"/tag/XSS/"}]}},{"node":{"id":"0bce4c63aa0e0e74f4a7d378fafdb1ae","title":"Berkenalan dengan Rector — PHP Reconstructor Tool","datetime":"2019-12-21 11:00:00","path":"/artikel/berkenalan-dengan-rector/","content":"<p>Basa-basi dulu ya. Pernah nggak kamu develop suatu aplikasi, udah lama banget, lalu beberapa tahun kemudian kamu ditugaskan/ingin kembangkan source code aplikasi tersebut sekaligus ingin mengubah codebasenya menggunakan bahasa pemrograman atau framework yang terbaru (saat itu). Apa yang kamu lakukan? periksa filenya satu-persatu, ubah manual? ya, cara amannya memang begitu. Untuk beberapa <em>task</em> sederhana lain, kamu mungkin akan memanfaatkan fitur dari IDE/text-editor seperti <em>refactor</em>, <em>find-and-replace</em>, dsb.</p>\n<p>Nah, sekarang di PHP ada <em>tool</em> untuk membantu kamu melakukan hal tersebut, namanya <a href=\"https://github.com/rectorphp/rector\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>Rector</em></a> — PHP <strong><u>Rec</u></strong>onstruc<strong><u>tor</u></strong>.\n<em>Rector</em> adalah <em>open source command line tool</em> untuk membantu developer melakukan <em>upgrade</em> dan <em>refactoring</em> <em>codebase</em> PHP mereka secara instan. Sebelum kamu berharap dan membaca terlalu jauh, ini kata dokumentasi <em>Rector</em>: <em>\"Why refactor manually if Rector can handle 80% for you?\"</em>.</p>\n<p>Jadi, ya, <em>Rector</em> ini bukan <em>tool</em> ajaib yang bisa memenuhi 100% keinginanmu. Bahkan mungkin nggak sampai 80% kebutuhanmu seperti yang dokumentasinya bilang.</p>\n<p>Ok, lanjut ya?</p>\n<h2 id=\"apa-saja-yang-bisa-dilakukan-rector\"><a href=\"#apa-saja-yang-bisa-dilakukan-rector\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Apa Saja yang Bisa Dilakukan Rector?</h2>\n<p>Secara garis besar ya itu tadi, <em>upgrading</em> dan <em>refactoring</em>.\nMisal kamu mau upgrade project PHP 5.3 kamu ke PHP 7.4, <em>Rector</em> memiliki beberapa set <em>rector</em> untuk membantu kamu melakukan perubahan yang diperlukan. Atau kamu mau upgrade Laravel 5.5 ke Laravel 6, <em>Rector</em> juga punya beberapa set <em>rector</em> untuk melakukan hal tersebut.</p>\n<p>Ok, sebelum kebingungan ini \"berkembang biak\", jadi gini:</p>\n<ul>\n<li><em>Package Rector</em> memiliki beberapa \"<em>set</em>\".</li>\n<li>Setiap \"<em>set</em>\" terdiri dari beberapa \"<em>Rector</em>\".</li>\n</ul>\n<p><img src=\"/images/posts/black-guy-question-mark.jpeg\" alt=\"Black Guy question mark\"></p>\n<p>Intinya gini, <em>package</em> <em>Rector</em> ini berisi sekumpulan <em>Rector</em> <em>(class)</em> yang dikelompokkan kedalam <em>set</em>-nya masing-masing, dimana setiap <em>Rector</em>-nya bertanggung jawab untuk menangani sebuah <em>refactoring</em>. Seperti: mengubah nama fungsi dari <code>fn_a()</code> ke <code>fn_b()</code>, atau mengubah argumen dari <code>fn($x, $y)</code> menjadi <code>fn($y, $x)</code>, dan lain sebagainya.</p>\n<p>Kembali ke subtopik \"Apa Saja yang Bisa Dilakukan Rector?\". Sebetulnya banyak, karena <em>set</em>-nya itu banyak.\nJadi disini saya sebutkan yang sekiranya \"wah\" aja.</p>\n<ul>\n<li>Rector dapat mendeteksi dan memberikan <em>return type</em> pada <em>function</em> yang belum didefinisikan <em>return type</em>-nya.</li>\n<li>Rector dapat memberikan anotasi <code>@var</code> pada <em>property</em> yang belum kamu berikan <code>@var</code>.</li>\n<li>Mengubah penggunaan <em>facade</em> menjadi <em>dependency injection</em> pada kode Laravel kamu.</li>\n<li>Mengubah kode Nette menjadi kode Symfony (saya sendiri belum coba).</li>\n<li>Mengubah <code>$value = $a ? $a : null</code> menjadi <code>$value = $a ?: null</code>.</li>\n<li>Kalau kamu pernah mengalami error <code>count(): Parameter must be an array or an object that implements Countable</code>, ada Rector <code>CountOnNullRector</code> untuk mencegah hal tersebut dengan melakukan <em>safety check</em> terlebih dahulu.</li>\n</ul>\n<p>Masih banyak lagi sebetulnya, berikut <a href=\"https://github.com/rectorphp/rector/blob/master/docs/AllRectorsOverview.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">daftar sets dan Rector</a> lainnya yang dapat kamu gunakan (kayaknya belum lengkap).</p>\n<h2 id=\"cara-kerja-rector\"><a href=\"#cara-kerja-rector\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cara Kerja Rector</h2>\n<p>Untuk detil cara kerjanya kamu bisa lihat di <a href=\"https://github.com/rectorphp/rector/blob/master/docs/HowItWorks.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">halaman ini</a>. Disini saya hanya menuliskan garis besarnya supaya kamu setidaknya mendapat gambaran cara kerjanya.</p>\n<ol>\n<li>Pertama, <em>Rector</em> membaca file yang ingin diterapkan <em>refactoring</em> menggunakan <code>file_get_contents</code>. Dapatlah si Rector <em>string</em> yang berisi <em>source code</em> kamu.</li>\n<li>Kemudian <em>string</em> yang berisi <em>source code</em> tersebut di-<em>parsing</em> menggunakan <a href=\"https://github.com/nikic/PHP-Parser\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>nikic/php-parser</code></a> menjadi <em>AST (Abstract Syntax Tree)</em>. Kalau kamu tidak tahu apa itu <em>AST</em>, anggap aja ini <em>JSON</em> yang berisi struktur <em>tree</em> dari <em>source code</em> kamu. <em>AST</em> tersebut berisi sekumpulan <em>node</em> yang saling terhubung, dimana setiap <em>node</em>-nya memiliki definisi <em>type</em>-nya, apakah dia <em>function</em>, <em>string</em>, <em>int</em>, <em>float</em>, <em>constant</em>, dsb. </li>\n<li>Setelah diparsing ke <em>AST</em>, <em>AST</em> tersebut dibaca <em>node-per-node</em>-nya, jika ada bagian yang perlu dilakukan <em>refactoring</em>, maka <em>node</em> input tersebut direkonstruksi menjadi <em>node</em> output.</li>\n<li>Kalau sudah selesai (semua <em>node</em> sudah dicek dan <em>Rector</em> yang digunakan sudah selesai melakukan rekonstruksi), <em>AST</em> hasil rekonstruksi tersebut akan diubah kembali menjadi <em>string</em> untuk disimpan ke file tersebut, atau sekedar ditampilkan perubahannya ke layar.</li>\n</ol>\n<h2 id=\"menggunakan-rector\"><a href=\"#menggunakan-rector\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Menggunakan Rector</h2>\n<p>Ada 2 cara instalasi <em>Rector</em>, yang pertama dengan <em>Docker</em>, yang ke-2 dengan <em>Composer</em>.\nDisini saya menggunakan cara yang lebih gampang jelasinnya, yaitu dengan <em>Composer</em>.</p>\n<h4 id=\"cek-requirements\"><a href=\"#cek-requirements\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cek <em>Requirements</em></h4>\n<p>Oke, sebelum menggunakan <em>Rector</em>, pastikan kamu memenuhi kebutuhan dibawah ini:</p>\n<ol>\n<li>PHP >= 7.2 (cek dengan <code>php -v</code>).</li>\n<li>Ekstensi PHP JSON dan Tokenizer (bisa dicek dengan <code>php -m</code>).</li>\n<li><a href=\"https://getcomposer.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Composer</a> (cek dengan <code>composer --version</code>).</li>\n</ol>\n<blockquote>\n<p>Versi <em>Rector</em> yang saya gunakan disini adalah versi <code>0.6.2</code>, jika kamu adalah manusia dari masa depan yang sedang membaca artikel ini di versi <em>Rector</em> yang lebih tinggi, mungkin <em>requirement</em> diatas bisa berubah atau bertambah.</p>\n</blockquote>\n<h4 id=\"menginstall-rector\"><a href=\"#menginstall-rector\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Menginstall <em>Rector</em></h4>\n<p>Pada saat saya menulis artikel ini, <em>Rector</em> masih bermasalah jika diinstall secara global menggunakan <code>composer global require</code>, jadi kita akan menginstallnya ke direktori khusus dengan perintah <code>composer require</code> biasa. Berikut <em>step-by-step</em>-nya:</p>\n<ol>\n<li>Buka terminal/cmd.</li>\n<li>\n<p>Buat dan masuk ke direktori manapun dimana kamu ingin menginstall <em>Rector</em>.\nContoh saya akan menginstall <em>Rector</em> di <code>~/dev/tools/rector</code>, maka perintah (linux) yang saya gunakan adalah:</p>\n<ul>\n<li><code>mkdir ~/Dev/rector -P</code> (buat direktorinya).</li>\n<li><code>cd ~/Dev/rector</code> (masuk ke direktorinya).</li>\n</ul>\n</li>\n<li>Install <em>Rector</em>: <code>composer require rector/rector --dev</code>.</li>\n<li>Cek instalasi: <code>./vendor/bin/rector --version</code>. Kalu muncul output seperti ini: <code>Rector v0.6.2</code> artinya instalasinya berhasil.</li>\n</ol>\n<p>Sampai sini kita sudah dapat menggunakan <em>Rector</em>, tapi saya mau jelaskan dulu strategi seperti apa yang akan kita gunakan.\nJadi dengan cara instalasi seperti ini (menggunakan <code>composer require</code>), saya memikirkan setidaknya ada 3 strategi yang dapat kamu lakukan:</p>\n<ol>\n<li>Menginstall <em>Rector</em> di setiap project kamu.</li>\n<li>Menaruh <em>source code</em> project yang ingin dilakukan <em>refactoring</em> kedalam direktori rector.</li>\n<li>Mendaftarkan <code>~/Dev/rector/vendor/bin</code> kedalam variable <code>PATH</code> untuk mengglobalkan perintah <code>rector</code>.</li>\n</ol>\n<p>Saya tidak menyarankan cara pertama, karena buat apa juga install <em>Rector</em> banyak-banyak, toh fungsinya sama.\nSedangkan untuk cara ke-2 dan ke-3, untuk penggunaan berkepanjangan saya lebih menyarankan cara ke-3. Tapi pada artikel ini, kita akan menggunakan cara ke-2 karena lebih mudah dan <em>to-the-point</em>.</p>\n<p>Jadi kita akan menaruh <em>source code</em> yang akan kita lakukan <em>refactoring</em> kedalam direktori <code>~/Dev/rector/src</code>.\nMisal kamu ingin <em>refactor</em> project Laravel kamu, kamu bisa menaruhnya ke <code>~/Dev/rector/src/project-laravelmu</code>.</p>\n<h4 id=\"melihat-set-yang-tersedia\"><a href=\"#melihat-set-yang-tersedia\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Melihat <em>Set</em> yang Tersedia</h4>\n<p>Sebelum kita melakukan <em>refactoring</em>, kita dapat mengecek terlebih dahulu <em>set</em> yang tersedia pada instalasi <em>Rector</em> kita.\nMasih di terminal, ketikkan:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">./vendor/bin/rector sets</span></span></code></pre></div>\n<p>Outputnya kurang lebih akan seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">Rector v0.6.2</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">116 available sets:</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">===================</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> action-injection-to-constructor-injection</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> array-str-functions-to-static-call       </span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> cakephp34</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> cakephp35</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> cakephp36</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> cakephp37</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> cakephp38</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> cakephp40</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> celebrity</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> code-quality</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> coding-style</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> constructor-injectin-to-action-injection </span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> contributte-to-symfony</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> dead-code</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> doctrine</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> ... masih banyak lagi</span></span></code></pre></div>\n<p>Itu adalah daftar <em>set</em> yang bisa kamu gunakan untuk tahap selanjutnya. Seperti yang saya bilang sebelumnya, setiap <em>set</em> terdiri dari sekumpulan <em>Rector</em> untuk melakukan <em>refactoring</em> yang berbeda-beda.</p>\n<p>Kalau kamu ingin mengecek ketersediaan <em>set</em> tertentu, contoh kamu ingin melihat <em>set</em> yang berhubungan sama Laravel,\nkamu bisa gunakan perintah dibawah ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">./vendor/bin/rector sets laravel</span></span></code></pre></div>\n<p>Maka outputnya akan difiltrasi seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">Rector v0.6.2</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">11 available sets:</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">==================</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel-static-to-injection</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel50</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel51</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel52</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel53</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel54</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel55</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel56</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel57</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel58</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> laravel60</span></span></code></pre></div>\n<blockquote>\n<p>Sayangnya pada versi <code>0.6.2</code> yang saya install ini, kita belum bisa melihat <em>Rector</em> apa saja pada masing-masing <em>set</em> tersebut.\nJadi jika kamu ingin melihat <em>Rector</em> pada setiap <em>set</em>, untuk sementara kamu dapat melihatnya pada <a href=\"https://github.com/rectorphp/rector/blob/master/docs/AllRectorsOverview.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">halaman ini</a>.</p>\n</blockquote>\n<h4 id=\"mengaplikasikan-set-dengan-1-perintah\"><a href=\"#mengaplikasikan-set-dengan-1-perintah\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Mengaplikasikan <em>Set</em> dengan 1 Perintah</h4>\n<p>Ini adalah cara penggunaan <em>Rector</em> yang paling sederhana.\nMisalkan disini saya akan mencoba <em>set</em> <code>php70</code> dimana salah satu <em>Rector</em>-nya adalah <code>TernaryToNullCoalescingRector</code>,\nyakni mengubah <a href=\"https://www.php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>Ternary Operator</em></a> menjadi <a href=\"language.operators.comparison.coalesce\"><em>Null Coalescing Operator</em></a>.</p>\n<p>Pertama saya membuat file <code>src/sample.php</code>. Lalu saya isikan kode sebagai berikut:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"~/Dev/rector/src/sample.php\">~/Dev/rector/src/sample.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">keyword </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">isset</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">_GET</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">q</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">_GET</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">q</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;&#39;</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div>\n<p>Untuk menerapkan <em>set</em> <code>php70</code> pada (seluruh file <code>.php</code> di) direktori <code>src</code>, kita dapat gunakan perintah dibawah ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">./vendor/bin/rector process --set php70 src</span></span></code></pre></div>\n<p>Maka <em>Rector</em> akan menampilkan perubahan apa saja yang dia lakukan, dan menyimpan perubahannya ke file tersebut.\nKalau kamu lihat kembali isi file <code>src/sample.php</code>, kode yang sebelumnya kita buat akan berubah menjadi seperti ini:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"~/Dev/rector/src/sample.php\">~/Dev/rector/src/sample.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">keyword </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">_GET</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">q</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">??</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;&#39;</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div>\n<p>Jika kamu menginginkan <em>Rector</em> hanya menampilkan perubahannya tanpa menyimpan perubahan ke masing-masing file,\nkamu dapat gunakan opsi <code>--dry-run</code> atau <code>-n</code> seperti dibawah ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">./vendor/bin/rector process --set php70 --dry-run src</span></span></code></pre></div>\n<p>Maka <em>Rector</em> hanya akan menampilkan perubahannya saja, tanpa menyimpan perubahan tersebut ke setiap filenya.</p>\n<h4 id=\"menerapkan-beberapa-set-sekaligus-dengan-rectoryaml\"><a href=\"#menerapkan-beberapa-set-sekaligus-dengan-rectoryaml\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Menerapkan Beberapa Set Sekaligus dengan <code>rector.yaml</code></h4>\n<p>Sebelumnya kita menerapkan <em>set</em> dengan sebuah perintah.\nBagaimana jika kita ingin menerapkan beberapa <em>set</em> sekaligus? jawabannya adalah file <code>rector.yaml</code>.</p>\n<p>File <code>rector.yaml</code> adalah file konfigurasi <em>Rector</em> yang kita siapkan untuk project tertentu.\nJadi setiap project bisa beda-beda file <code>rector.yaml</code>-nya. Untuk namanya sebetulnya tidak harus <code>rector.yaml</code>,\njadi misalkan kamu punya konfigurasi berbeda antara project A dan project B, kamu bisa bedakan namanya, misal <code>rector-a.yaml</code>, dan <code>rector-b.yaml</code>. Hanya saja secara default <em>Rector</em> akan menggunakan file <code>rector.yaml</code> yang pada direktori\ndimana kamu menjalankan perintah <code>rector</code>.</p>\n<p>Pada file <code>rector.yaml</code> ini kita bisa spesifikasikan beberapa hal, seperti <em>sets</em> yang ingin digunakan,\nfile autoloading tambahan, path pengecualian, dsb.\nTapi bakal panjang kalau saya contohin satu-persatu,\njadi disini saya contohin cara menerapkan beberapa <em>sets</em> sekaligus aja.</p>\n<p>Oke, jadi pertama-tama saya siapkan dulu contoh file yang mau di-<em>refactoring</em>-nya.\nSaya ubah <code>src/sample.php</code> menjadi seperti ini:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"~/Dev/rector/src/sample.php\">~/Dev/rector/src/sample.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">try</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">isset</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">argv</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">argv</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(!$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">throw</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Missing filename</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">json </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">json_decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">file_get_contents</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">dirname</span><span style=\"color: #89DDFF\">(__FILE__)</span><span style=\"color: #89DDFF\">.&#39;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&#39;.</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #82AAFF\">print_r</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">json</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">catch</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">JsonException</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">catch</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Misalkan saya ingin menerapkan 3 buah set, yakni set <code>php53</code>, <code>php70</code> dan <code>php71</code>.\nJadi mari kita buat file <code>rector.yaml</code> seperti dibawah ini:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"~/Dev/rector/rector.yaml\">~/Dev/rector/rector.yaml</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #F07178\">parameters</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">sets</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C3E88D\">php53</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C3E88D\">php70</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C3E88D\">php71</span></span></code></pre></div>\n<p>Selanjutnya mari kita cek dulu apa saja yang akan dirubah dengan perintah:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">./vendor/bin/rector process --dry-run src</span></span></code></pre></div>\n<p>Outputnya akan seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">Rector v0</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F78C6C\">2</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">Config file</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> rector</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">yaml</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">[============================]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">%</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #A6ACCD\"> file with changes</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">===================</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">1</span><span style=\"color: #A6ACCD\">) src</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #A6ACCD\">sample</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">----------</span><span style=\"color: #A6ACCD\"> begin diff </span><span style=\"color: #89DDFF\">----------</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">---</span><span style=\"color: #A6ACCD\"> Original</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+++</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">New</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">@@</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">13</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">13</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">@@</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">InvalidArgumentException</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">JsonException</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">try</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">isset</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">argv</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">argv</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">argv</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">??</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">     </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(!$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">         </span><span style=\"color: #89DDFF\">throw</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">missing filename</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">     </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">json </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">json_decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">file_get_contents</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">dirname</span><span style=\"color: #89DDFF\">(__FILE__)</span><span style=\"color: #89DDFF\">.&#39;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&#39;.</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">catch</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">JsonException</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">json </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">json_decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">file_get_contents</span><span style=\"color: #89DDFF\">(__DIR__</span><span style=\"color: #89DDFF\">.&#39;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&#39;.</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">catch</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">JsonException</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">     </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">catch</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\">    </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #A6ACCD\"> }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">\\ </span><span style=\"color: #89DDFF\">No</span><span style=\"color: #A6ACCD\"> newline at end of file</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">-----------</span><span style=\"color: #A6ACCD\"> end diff </span><span style=\"color: #89DDFF\">-----------</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">Applied rules</span><span style=\"color: #89DDFF\">:</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> Rector\\Php71\\Rector\\TryCatch\\MultiExceptionCatchRector</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #A6ACCD\"> Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector</span></span>\n\n\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span><span style=\"color: #A6ACCD\">OK</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> Rector is done</span><span style=\"color: #89DDFF\">!</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #A6ACCD\"> changed files                                                                         </span></span></code></pre></div>\n<p>Disitu bisa kita lihat bagian-bagian yang ditambah dan dihapus.\nJuga pada bagian bawah kita dapat lihat ada 3 <em>Rector</em> yang digunakan, yaitu:</p>\n<ol>\n<li><code>Rector\\Php71\\Rector\\TryCatch\\MultiExceptionCatchRector</code> dari set <code>php71</code>.</li>\n<li><code>Rector\\Php70\\Rector\\Ternary\\TernaryToNullCoalescingRector</code> dari set <code>php70</code>.</li>\n<li><code>Rector\\Php53\\Rector\\FuncCall\\DirNameFileConstantToDirConstantRector</code> dari set <code>php53</code>.</li>\n</ol>\n<p>Kalau sekiranya oke, mari kita aplikasikan ke filenya dengan menghapuskan <code>--dry-run</code> seperti dibawah ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">./vendor/bin/rector process src</span></span></code></pre></div>\n<p>Sekarang, kalau kita lihat filenya, maka akan jadi seperti ini:</p>\n<div class='code-container'><div class=\"code-metadata \" filename=\"~/Dev/rector/src/sample.php\">~/Dev/rector/src/sample.php</div><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">InvalidArgumentException</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">JsonException</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">try</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">argv</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">??</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(!$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">throw</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">missing filename</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">json </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">json_decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">file_get_contents</span><span style=\"color: #89DDFF\">(__DIR__</span><span style=\"color: #89DDFF\">.&#39;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&#39;.</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">catch</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">JsonException</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #FFCB6B\">InvalidArgumentException</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">e</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<h2 id=\"penutup\"><a href=\"#penutup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Penutup</h2>\n<p>Oke mungkin segitu saja untuk artikel pengenalan <em>Rector</em> kali ini.\nKarena <em>tool</em> ini umurnya masih terbilang baru, jadi memang mungkin belum banyak yang bisa kita lakukan.\nTapi kedepan mungkin akan banyak tambahan-tambahan <em>Rector</em> lain yang dapat membantu <em>task</em> <em>refactoring</em> kita.\nJadi tidak ada salahnya kita pelajari sejak awal.</p>\n<p>Yaudah, sekian untuk artikel kali ini. Semoga bermanfaat. Dadah ~</p>\n","excerpt":"Basa-basi dulu ya. Pernah nggak kamu develop suatu aplikasi, udah lama banget, lalu beberapa tahun kemudian kamu ditugaskan/ingin kembangkan source code aplikasi tersebut sekaligus ingin mengubah","description":"Upgrade dan refactoring kode PHP kamu secara instan","tags":[{"id":"PHP","title":"PHP","path":"/tag/PHP/"},{"id":"Rector","title":"Rector","path":"/tag/Rector/"}]}},{"node":{"id":"b86316117b02f0df7b890fc2071827cc","title":"Membuat API Rate Limiting menggunakan Redis pada Express.js","datetime":"2019-12-01 11:00:00","path":"/artikel/membuat-api-rate-limiting-redis-express/","content":"<p>Beberapa waktu yang lalu, saya sempat menuliskan catatan kursus Redis saya di <a href=\"university.redislabs.com/\">Redis University</a>. Tapi catatannya tidak saya lanjutkan karena <del>materi yang dibahas antar kelas yang satu dengan kelas yang lainnya banyak yang mirip-mirip</del> saya malas. Sebagai gantinya, saya akan menuliskan beberapa artikel Redis yang sekiranya banyak dibutuhkan oleh industri. Salah satunya adalah Rate Limiting ini.</p>\n<p>Rate Limiting (dalam konteks aplikasi web) adalah proses membatasi jumlah request user/client pada resource tertentu. Sebagai contoh disini kita akan coba membatasi akses user terhadap API yang dibuat menggunakan Express.js pada setiap menitnya.</p>\n<p>Sebelum mencoba ini, pastikan kamu sudah menginstall <strong><a href=\"https://redis.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis</a></strong> dan <strong><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a></strong> terlebih dahulu. Pada tutorial ini saya menggunakan Node.js versi 10.15.3 dan Redis versi 5.0.5. Buat kamu yang pakai Windows seperti saya, kamu dapat menjalankan Redis dengan Docker.</p>\n<h2 id=\"kenapa-redis\"><a href=\"#kenapa-redis\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kenapa Redis?</h2>\n<p>Untuk membuat Rate Limiting kita bisa saja menggunakan NginX atau session.\nTapi kenapa Redis?</p>\n<ul>\n<li>Dibandingkan dengan NginX, Rate Limiting menggunakan Redis lebih fleksibel karena kita sendiri yang mengatur logic dari Rate Limiternya.</li>\n<li>Performa Redis yang menggunakan penyimpanan pada RAM lebih cepat ketimbang session yang (biasanya) menggunakan file atau database lain yang menggunakan penyimpanan fisik.</li>\n<li>Redis mendukung banyak platform dan memiliki ketersediaan library di berbagai bahasa pemrograman.</li>\n</ul>\n<h2 id=\"persiapan\"><a href=\"#persiapan\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Persiapan</h2>\n<p>Saya akan <em>to-the-point</em> aja disini, kalau bingung silahkan tanya saya via <a href=\"https://www.facebook.com/em.sifa\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">facebook</a>.</p>\n<ul>\n<li>Buka terminal atau cmd (selanjutnya saya akan sebut terminal aja).</li>\n<li>Buat direktori baru: <code>mkdir express-rate-limiting</code>.</li>\n<li>Masuk ke direktori tersebut: <code>cd express-rate-limiting</code>.</li>\n<li>Inisiasi file package.json: <code>npm init -y</code>.</li>\n<li>Install package yang dibutuhkan: <code>npm i -S express redis bluebird date-fns</code>.</li>\n<li>Buka terminal lain, jalankan redis-server.</li>\n</ul>\n<p>Berikut sedikit penjelasan tentang package yang kita install diatas:</p>\n<ul>\n<li><code>express</code>: untuk membuat Web API.</li>\n<li><code>redis</code>: untuk koneksi dan mengirim perintah ke redis server.</li>\n<li><code>bluebird</code>: untuk membuat versi Promise pada setiap API/function di package redis.</li>\n<li><code>date-fns</code>: untuk format tanggal.</li>\n</ul>\n<h2 id=\"konsep\"><a href=\"#konsep\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Konsep</h2>\n<p>Goal pada aplikasi yang akan kita buat disini adalah untuk\nmembatasi akses ke endpoint <code>GET /hello</code> supaya setiap IP\nhanya dapat mengakses sebanyak 10 kali saja setiap menitnya.</p>\n<p>Untuk mencapai goal tersebut, kita akan memanfaatkan 3 perintah redis, yaitu:</p>\n<ul>\n<li><code>GET</code>: untuk mengambil nilai dari key.</li>\n<li><code>INCR</code>: untuk increment nilai numerik dari key.</li>\n<li><code>EXPIRE</code>: untuk set expiration key supaya nilai dari keynya otomatis hilang dalam kurun waktu tertentu, sehingga tidak membebani memori berkepanjangan. Istilah kerennya <em>time-based retention</em>.</li>\n</ul>\n<p>Pemanfaatannya adalah sebagai berikut:</p>\n<ul>\n<li>Ambil jumlah akses (nilai numerik) dari key menggunakan <code>GET</code>.</li>\n<li>\n<p>Jika jumlah akses melebihi batas (10):</p>\n<ul>\n<li>Kirim response error 429 (Too Many Requests).</li>\n</ul>\n</li>\n<li>\n<p>Jika jumlah akses dibawah atau sama dengan batas (10):</p>\n<ul>\n<li>Increment nilai dari key menggunakan <code>INCR</code>.</li>\n<li>Set expire dari key menggunakan <code>EXPIRE</code>.</li>\n<li>Kirim response sukses.</li>\n</ul>\n</li>\n</ul>\n<p>Supaya <u>setiap IP</u> hanya boleh mengakses <u>path tertentu</u> pada <u>setiap menitnya</u>.\nKita akan membuat keynya dengan format seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\">IP</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\">PATH</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\">TAHUN</span><span style=\"color: #89DDFF\">}{</span><span style=\"color: #A6ACCD\">BULAN</span><span style=\"color: #89DDFF\">}{</span><span style=\"color: #A6ACCD\">TANGGAL</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\">JAM</span><span style=\"color: #89DDFF\">}{</span><span style=\"color: #A6ACCD\">MENIT</span><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Contoh jika IP <code>1.2.3.4</code> mengakses <code>\"/hello\"</code> pada <code>2019-12-01 10:15:25</code>. Keynya akan seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">1.2.3.4:/hello:20191201:1015</span></span></code></pre></div>\n<p>Sebagai gambaran, berikut adalah table skenario request yang dijalankan oleh <code>1.2.3.4</code> ke path <code>/hello</code> pada waktu tertentu:</p>\n<div class=\"table-responsive\">\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>No.</strong></th>\n<th align=\"center\"><strong>Waktu</strong></th>\n<th align=\"center\"><strong>Key</strong></th>\n<th align=\"center\"><strong>Value</strong></th>\n<th align=\"center\"><strong>Hasil</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">2019-12-01 10:01:00</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">1</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">2019-12-01 10:01:01</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">2</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">2019-12-01 10:01:05</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">3</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">2019-12-01 10:01:12</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">4</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">2019-12-01 10:01:16</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">5</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">2019-12-01 10:01:18</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">6</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">2019-12-01 10:01:19</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">7</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">2019-12-01 10:01:21</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">8</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">9</td>\n<td align=\"center\">2019-12-01 10:01:25</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">9</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">2019-12-01 10:01:30</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">10</td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">2019-12-01 10:01:36</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">11</td>\n<td align=\"center\"><strong class=\"text-red-500\">error</strong></td>\n</tr>\n<tr>\n<td align=\"center\">12</td>\n<td align=\"center\">2019-12-01 10:01:40</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:1001</td>\n<td align=\"center\">11</td>\n<td align=\"center\"><strong class=\"text-red-500\">error</strong></td>\n</tr>\n<tr>\n<td align=\"center\">13</td>\n<td align=\"center\">2019-12-01 10:<strong class=\"bg-gray-200 text-gray-800\">02</strong>:05</td>\n<td align=\"center\">1.2.3.4:/hello:20191201:10<strong class=\"bg-gray-200 text-gray-800\">02</strong></td>\n<td align=\"center\"><strong class=\"bg-gray-200 text-gray-800\">1</strong></td>\n<td align=\"center\"><strong class=\"text-green-500\">sukses</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"implementasi\"><a href=\"#implementasi\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Implementasi</h2>\n<p>Sekarang saatnya masuk ke <em>text editor</em> atau <em>IDE</em> favorit kamu.\nPertama-tama silahkan buat file <code>app.js</code> pada direktori yang sama dengan file <code>package.json</code>.\nLalu kita akan masuk ke tahap berikutnya.</p>\n<h4 id=\"1-import-package\"><a href=\"#1-import-package\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Import Package</h4>\n<p>Sebelum menuliskan <em>app logic</em>-nya, mari kita import dulu <em>package</em> yang sudah kita install sebelumnya.</p>\n<p>Isikan kode seperti dibawah ini pada file <code>app.js</code> kamu:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> format </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">date-fns</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> express </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">express</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> bluebird </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bluebird</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> redis </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">redis</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n<h4 id=\"2-promisify\"><a href=\"#2-promisify\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Promisify</h4>\n<p>Pada tahap ini kita akan menggunakan bluebird untuk menambahkan <em>Promise-based</em> function pada setiap API/function yang tersedia pada <em>package</em> redis.</p>\n<p>Silahkan tambahkan baris berikut setelah <em>require-require</em> sebelumnya.</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">bluebird</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">promisifyAll</span><span style=\"color: #A6ACCD\">(redis)</span></span></code></pre></div>\n<blockquote>\n<p>Promise-based function berfungsi untuk menghindari <a href=\"http://callbackhell.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">callback-hell</a></p>\n</blockquote>\n<h4 id=\"3-membuat-dan-menghubungkan-redis-client\"><a href=\"#3-membuat-dan-menghubungkan-redis-client\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Membuat dan Menghubungkan Redis Client</h4>\n<p>Selanjutnya, untuk dapat mengirimkan perintah ke redis-server, kita perlu membuat dan menghubungkan redis client terlebih dahulu.</p>\n<p>Tambahkan baris berikut dibawah tahap sebelumnya:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> client </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> redis</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">createClient</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">127.0.0.1</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">6379</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n<p>Kalau sudah, kamu dapat test koneksi menggunakan terminal dengan perintah:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">node app</span></span></code></pre></div>\n<p>Tunggu sebentar, kalau muncul error <code>ECONNREFUSED</code>, kemungkinannya:</p>\n<ul>\n<li>Redis server belum running</li>\n<li>Hostnya salah</li>\n<li>Portnya salah</li>\n</ul>\n<p>Silahkan cek dan sesuaikan lagi.</p>\n<h4 id=\"4-inisiasi-express-app\"><a href=\"#4-inisiasi-express-app\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Inisiasi Express App</h4>\n<p>Setelah koneksi redis client berhasil, saatnya kita membuat aplikasi webnya.</p>\n<p>Lanjut dibawah kode sebelumnya. Ketikkan kode berikut:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> port </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3000</span><span style=\"color: #A6ACCD\">     </span><span style=\"color: #676E95\">// definisikan port</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> app </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">express</span><span style=\"color: #A6ACCD\">() </span><span style=\"color: #676E95\">// inisiasi web app</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Daftarkan endpoint &quot;GET /hello&quot;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Hello world</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Jalankan web app</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">listen</span><span style=\"color: #A6ACCD\">(port</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">App listening on port </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">port</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">!</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n<hr>\n<details><summary>Kode keseluruhan pada tahap ini:</summary>\n<p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> format </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">date-fns</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> express </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">express</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> bluebird </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bluebird</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> redis </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">redis</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">bluebird</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">promisifyAll</span><span style=\"color: #A6ACCD\">(redis)</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> client </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> redis</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">createClient</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">127.0.0.1</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">6379</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> port </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3000</span><span style=\"color: #A6ACCD\">     </span><span style=\"color: #676E95\">// definisikan port</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> app </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">express</span><span style=\"color: #A6ACCD\">() </span><span style=\"color: #676E95\">// inisiasi web app</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Daftarkan endpoint &quot;GET /hello&quot;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Hello world</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Jalankan web app</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">listen</span><span style=\"color: #A6ACCD\">(port</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">App listening on port </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">port</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">!</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n</p>\n</details>\n<hr>\n<h4 id=\"5-menerapkan-rate-limiting-pada-endpoint-get-hello\"><a href=\"#5-menerapkan-rate-limiting-pada-endpoint-get-hello\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Menerapkan Rate Limiting pada Endpoint \"GET /hello\"</h4>\n<p>Pada tahap ini kita akan memanfaatkan redis client untuk membatasi akses ke endpoint <code>GET /hello</code>\nsupaya setiap IP hanya dapat mengakses sebanyak 10 kali saja pada setiap menitnya.</p>\n<p>Silahkan ubah <code>app.get('/hello', ...)</code> pada tahap sebelumnya menjadi seperti ini (pahami penjelasan baris-per-baris):</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">limit</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #F07178\">      </span><span style=\"color: #676E95\">// limit akses setiap menitnya</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">path</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95\">// path dari API</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">format</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Date</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">yyyyMMdd:HHmm</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">) </span><span style=\"color: #676E95\">// waktu untuk dijadikan key  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Set redis key yang digunakan untuk menyimpan </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// jumlah akses oleh IP: req.ip, untuk path: path, pada menit: time</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`${</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">ip</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">path</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #F07178\"> </span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Ambil jumlah akses saat ini</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">count</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">parseInt</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAsync</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Kalau jumlah akses melebihi limit ...</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #A6ACCD\">count</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">limit</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">      </span><span style=\"color: #676E95\">// ... kirim response error 429</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">status</span><span style=\"color: #F07178\">(</span><span style=\"color: #F78C6C\">429</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      error</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">429</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">API rate limit exceeded</span><span style=\"color: #89DDFF\">`</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Jalankan transaction untuk:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">multi</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">incr</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\">)         </span><span style=\"color: #676E95\">// 1. increment key</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">60</span><span style=\"color: #F07178\">)   </span><span style=\"color: #676E95\">// 2. set expire key 60 detik</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">execAsync</span><span style=\"color: #F07178\">()</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Kirim response yang seharusnya</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Hello world</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n<p>Hmm, panjang juga ya. Kalau belum paham, baca ulang lagi aja sampai paham.</p>\n<p>Pada saat mengeset variable <code>key</code>, kamu dapat sesuaikan sesuai kebutuhan kamu.\nMisal untuk IP diatas dapat kamu ganti dengan token.\nAtau misal kamu mau batasinya per jam, kamu dapat ubah format<code>time</code>-nya menjadi <code>yyyyMMdd:HH</code> aja.\nAtau misalkan lagi kamu mau batasi secara global, bukan hanya pada path <code>/hello</code> aja,\nkamu dapat hilangkan informasi <code>path</code> pada <code>key</code>-nya.</p>\n<hr>\n<details><summary>Kode keseluruhan pada tahap ini:</summary>\n<p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> format </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">date-fns</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> express </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">express</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> bluebird </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bluebird</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> redis </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">redis</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">bluebird</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">promisifyAll</span><span style=\"color: #A6ACCD\">(redis)</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> client </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> redis</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">createClient</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">127.0.0.1</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">6379</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> port </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3000</span><span style=\"color: #A6ACCD\">     </span><span style=\"color: #676E95\">// definisikan port</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> app </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">express</span><span style=\"color: #A6ACCD\">() </span><span style=\"color: #676E95\">// inisiasi web app</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Daftarkan endpoint &quot;GET /hello&quot;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">limit</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #F07178\">      </span><span style=\"color: #676E95\">// limit akses setiap menitnya</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">path</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\"> </span><span style=\"color: #676E95\">// path dari API</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">format</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Date</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">yyyyMMdd:HHmm</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">) </span><span style=\"color: #676E95\">// waktu untuk dijadikan key  </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Set redis key yang digunakan untuk menyimpan </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// jumlah akses oleh IP: req.ip, untuk path: path, pada menit: time</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`${</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">ip</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">path</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #F07178\"> </span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Ambil jumlah akses saat ini</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">count</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">parseInt</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAsync</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Kalau jumlah akses melebihi limit ...</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #A6ACCD\">count</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">limit</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95\">// ... kirim response error 429</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">status</span><span style=\"color: #F07178\">(</span><span style=\"color: #F78C6C\">429</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      error</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">429</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">API rate limit exceeded</span><span style=\"color: #89DDFF\">`</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Jalankan transaction untuk:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">multi</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">incr</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\">)         </span><span style=\"color: #676E95\">// 1. increment key</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">60</span><span style=\"color: #F07178\">)   </span><span style=\"color: #676E95\">// 2. set expire key 60 detik</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">trx</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">execAsync</span><span style=\"color: #F07178\">()</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Kirim response yang seharusnya</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Hello world</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Jalankan web app</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">listen</span><span style=\"color: #A6ACCD\">(port</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">App listening on port </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">port</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">!</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n</p>\n</details>\n<hr>\n<h4 id=\"6-cobain\"><a href=\"#6-cobain\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. Cobain</h4>\n<p>Sampai sini, rate limiting kita sudah jadi.\nSilahkan jalankan kembali perintah <code>node app</code> pada terminal.\nKemudian buka web browser, bukalah URL <code>http://localhost:3000/hello</code>.</p>\n<p>Seharusnya, pada 10 request pertama kamu akan mendapatkan response seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">message</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello World</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Sedangkan pada request selanjutnya, kamu akan mendapatkan response seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">429</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">message</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">API rate limit exceeded</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Lalu coba tunggu 1 menit, kemudian akses <code>/hello</code> lagi. Responsenya akan kembali seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\">message</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello World</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Artinya rate-limiting kita sudah berhasil membatasi 10 kali akses pada setiap menitnya.</p>\n<h2 id=\"penutup\"><a href=\"#penutup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Penutup</h2>\n<p>Sampai sini saya harap kamu sudah paham tentang Rate Limiting, serta penerapan Rate Limiting menggunakan Redis (khususnya) pada Express.js. Untuk bahasa dan framework lain, tahapannya kurang/lebih sama.\nYaitu kamu cukup memanfaatkan perintah <code>get</code>, <code>incr</code> dan <code>expire</code> pada Redis client di bahasa/framework itu.</p>\n<p>Sebagai bonus, dibawah ini saya lampirkan kode middleware dari penerapan Rate Limiting kita diatas.\nDengan middleware ini, kamu dapat menerapkan rate-limiting ke berbagai endpoint cukup dengan 1 baris pemanggilan fungsi middleware ini.</p>\n<hr>\n<details><summary>BONUS</summary>\n<p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> format </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">date-fns</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> express </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">express</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> bluebird </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bluebird</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> redis </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">require</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">redis</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">bluebird</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">promisifyAll</span><span style=\"color: #A6ACCD\">(redis)</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> client </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> redis</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">createClient</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">127.0.0.1</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\">port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">6379</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> port </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3000</span><span style=\"color: #A6ACCD\">     </span><span style=\"color: #676E95\">// definisikan port</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> app </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">express</span><span style=\"color: #A6ACCD\">() </span><span style=\"color: #676E95\">// inisiasi web app</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Middleware rate limit per menit</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> rateLimitPerMinute </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">limit</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> path</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">async</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">next</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">format</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">Date</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">yyyyMMdd:HHmm</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`${</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">ip</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">path </span><span style=\"color: #89DDFF\">||</span><span style=\"color: #A6ACCD\"> req</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">path</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #89DDFF\">}`</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">count</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">parseInt</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAsync</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\">))</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #A6ACCD\">count</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">limit</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">status</span><span style=\"color: #F07178\">(</span><span style=\"color: #F78C6C\">429</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        error</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">429</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">API rate limit exceeded</span><span style=\"color: #89DDFF\">`</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">mul</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">multi</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #A6ACCD\">mul</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">incr</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #A6ACCD\">mul</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">60</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">mul</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">execAsync</span><span style=\"color: #F07178\">()</span></span>\n\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">next</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Daftarkan endpoint &quot;GET /hello&quot;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">rateLimitPerMinute</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">res</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">json</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Hello world</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\">// Jalankan web app</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">app</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">listen</span><span style=\"color: #A6ACCD\">(port</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">App listening on port </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">port</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">!</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span></span></code></pre></div>\n</p>\n</details>\n<hr>\n<p>Yaudah sekian dulu artikel kali ini. Semoga bermanfaat. Dadah ~</p>\n","excerpt":"Beberapa waktu yang lalu, saya sempat menuliskan catatan kursus Redis saya di Redis University. Tapi catatannya tidak saya lanjutkan karena materi yang dibahas antar kelas yang satu dengan kelas yang","description":"Membatasi jumlah akses API setiap menitnya menggunakan Redis pada Express.js.","tags":[{"id":"Express.js","title":"Express.js","path":"/tag/Express.js/"},{"id":"Node","title":"Node","path":"/tag/Node/"},{"id":"Redis","title":"Redis","path":"/tag/Redis/"}]}},{"node":{"id":"80040c8d50366162db3f400b81efbfdc","title":"Export Jutaan Data ke CSV dengan Aman di Laravel","datetime":"2019-11-08 11:00:00","path":"/artikel/export-jutaan-data-ke-csv-dengan-aman-di-laravel/","content":"<p>Pada versi 6.0, Laravel menambahkan sebuah fitur baru yaitu <em>Lazy Collection</em>.\nDengan <em>Lazy Collection</em>, aplikasi Laravel dapat mengambil sekumpulan data dari database\ntanpa harus menampung <strong>seluruh</strong> data tersebut kedalam memori. Di balik layar, <em>Lazy Collection</em>\nmemanfaatkan fitur <em>PHP Generator</em>. Beberapa waktu lalu, saya posting <a href=\"https://www.facebook.com/em.sifa/videos/vb.100000130485713/3270308866316764/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">video</a> untuk menjelaskan bagaimana generator dapat menghemat penggunaan memori,\nvideo berdurasi 20 menitan tersebut dapat membantu kamu untuk lebih memahami apa yang saya tuliskan disini.</p>\n<p>Pada artikel ini, saya mau share bagaimana cara memanfaatkan <em>Lazy Collection</em> untuk melakukan streaming file CSV,\nsehingga kita dapat melakukan export jutaan data tanpa harus menampung jutaan data tersebut ke dalam memori.</p>\n<h4 id=\"kenapa-csv\"><a href=\"#kenapa-csv\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kenapa CSV?</h4>\n<p>Kenapa menggunakan CSV?, kenapa bukan file excel aja?</p>\n<p>Setahu saya, koreksi kalau salah loh ya. Saat ekspor data menjadi file excel, yang terjadi adalah\n(jutaan) data kamu akan dibuffer/ditampung kedalam konten file excel, setelah selesai,\nfile tersebut masih diolah lagi untuk dilakukan proses encoding,\nstyling (membuat border, warnai teks, merge-cells, dsb), sampai akhirnya <em>buntelan</em> file excel kamu siap,\nbarulah file excel kamu \"disajikan\" ke browser.</p>\n<p>Saat \"memasak\" (baca: mengolah) file excel tersebut, semakin banyak \"porsi\" (baca: baris) yang ingin dimasak, semakin besar pula \"wajan\" (baca: memori) yang harus digunakan untuk \"memasak\" file itu. Kalau \"wajan\"-nya tidak cukup besar, aplikasi kamu akan error, karena memorinya tidak mencukupi.</p>\n<p>Berbeda dengan CSV, file CSV hanya berisi teks biasa (<em>plain text</em>) yang setiap barisnya mewakili baris pada tabel, dimana pada setiap baris terdapat karakter \";\" atau \",\" sebagai pemisah dari masing-masing kolom. Kekurangannya, pada file CSV kita tidak bisa melakukan styling, formula, dsb seperti yang didukung oleh format excel. Tapi dengan kekurangan tersebut, kita dapat melakukan streaming konten CSV baris-per-baris, dari server dialirkan ke browser, dari browser dialirkan ke storage device user. Singkatnya: server kita tidak perlu menampung beban memori dari seluruh data di dalam file CSV yang hendak diekspor.</p>\n<h4 id=\"kenapa-lazy-collection\"><a href=\"#kenapa-lazy-collection\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kenapa Lazy Collection?</h4>\n<p>Kalau kamu pernah menonton video yang saya sebutkan di awal, kamu akan mengerti peran Lazy Collection disini.\nSingkatnya, dengan Lazy Collection kita tidak perlu menampung data yang ingin kita ekspor,\nsehingga yang terjadi adalah data dari hasil query akan difetch satu-per-satu dari DBMS, untuk kemudian data tersebut\nditulis kedalam stream file CSV yang akan diterima dan diproses langsung oleh web browser.</p>\n<p>Secara keseluruhan, gambaran prosesnya nanti akan jadi (kurang-lebih) seperti ini:</p>\n<p><img src=\"/images/posts/export-jutaan-data-ke-csv-dengan-aman-di-laravel__1.png\" alt=\"Alur download stream csv\"></p>\n<h2 id=\"bagaimana-caranya\"><a href=\"#bagaimana-caranya\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bagaimana Caranya?</h2>\n<p>Caranya sebetulnya sederhana.\nMisalkan disini kita memiliki model <code>App\\Models\\LogActivity.php</code> yang mewakili table <code>log_activities</code> yang berisi 10 juta data.\nDi dalam table tersebut, kita ingin export data <code>time</code>, <code>user_id</code>, <code>message</code>, <code>ip_address</code>, dan <code>user_agent</code>.</p>\n<p>Supaya agak panjang artikelnya, misalnya isi file modelnya kayak gini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">namespace</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Illuminate</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Database</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Eloquent</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Model</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">LogActivity</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Model</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">protected</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">table </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">log_activities</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Dah, gitulah ya.</p>\n<p>Kemudian, kita menambahkan route seperti ini di <code>routes/web.php</code>:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">Route</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">log-activities/export</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">LogActivityController@export</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div>\n<p>Setelah itu, pada controllernya kamu dapat menuliskan seperti ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">namespace</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">App</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Http</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Controllers</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">App</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">Models</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">LogActivity</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">Illuminate</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">Http</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">Request</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">LogActivityController</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Controller</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">export</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// 1. Ambil seluruh data log_activities kedalam LazyCollection (Generator)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">logs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">LogActivity</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">orderBy</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">time</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)-&gt;</span><span style=\"color: #82AAFF\">cursor</span><span style=\"color: #89DDFF\">();</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// FYI: dibawah ini contoh kalau kamu mau gunakan condition dengan cursor</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// $logs = LogActivity::whereRaw(&quot;DATE(time) = &#39;2019-11-08&#39;&quot;)-&gt;where(&#39;user_id&#39;, 1)-&gt;cursor()</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// 2. Set header untuk streaming file CSV</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">log-activities.csv</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #82AAFF\">header</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Content-type: text/csv</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #82AAFF\">header</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Content-Disposition: attachment; filename=</span><span style=\"color: #89DDFF\">{$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">}&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// 3. Stream file CSV</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">csv </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">fopen</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">php://output</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">w+</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// 3.a. Tulis table header</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #82AAFF\">fputcsv</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">csv</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Time</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">User ID</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Message</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">IP Address</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">User Agent</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// 3.b. Tulis baris setiap log</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">foreach</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">logs </span><span style=\"color: #89DDFF\">as</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #82AAFF\">fputcsv</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">csv</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">[</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">user_id</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">message</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">ip_address</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">user_agent</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95\">// 3.c. Tutup file</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #82AAFF\">fclose</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">csv</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<p>Selesai. Dengan begitu, ketika kamu mengakses <code>https://appkamu.com/log-activities/export</code>,\naplikasi kamu akan mengirimkan response berupa streaming file CSV yang berisi semua data didalam <code>log_activities</code>\ntanpa harus mengalami beban memori yang tinggi.</p>\n<hr>\n<p>Ngomong-ngomong, cara diatas adalah cara yang agak native karena kita langsung menggunakan fungsi <code>header</code> bawaan PHP.\nSaya tulis seperti itu supaya kamu tahu cara di native atau di framework lain seperti apa.\nKalau kamu penasaran cara yang \"lebih\" ke-Laravel-an, kamu dapat menggunakan fungsi <code>streamDownload</code> seperti dibawah ini:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #A6ACCD\">php</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">namespace</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">App</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Http</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #FFCB6B\">Controllers</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">App</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">Models</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">LogActivity</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">use</span><span style=\"color: #FFCB6B\"> </span><span style=\"color: #A6ACCD\">Illuminate</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">Http</span><span style=\"color: #89DDFF\">\\</span><span style=\"color: #A6ACCD\">Request</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">LogActivityController</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">extends</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Controller</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">export</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">logs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">LogActivity</span><span style=\"color: #89DDFF\">::</span><span style=\"color: #82AAFF\">orderBy</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">time</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)-&gt;</span><span style=\"color: #82AAFF\">cursor</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">log-activities.csv</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">response</span><span style=\"color: #89DDFF\">()-&gt;</span><span style=\"color: #82AAFF\">streamDownload</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">function</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">use</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">logs</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">csv </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">fopen</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">php://output</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">w+</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #82AAFF\">fputcsv</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">csv</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Time</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">User ID</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Message</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">IP Address</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">User Agent</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]);</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #89DDFF\">foreach</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">logs </span><span style=\"color: #89DDFF\">as</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #82AAFF\">fputcsv</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">csv</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">[</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">time</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">user_id</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">message</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">ip_address</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">log</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #A6ACCD\">user_agent</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">                </span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">            </span><span style=\"color: #82AAFF\">fclose</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #A6ACCD\">csv</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #89DDFF\">},</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #A6ACCD\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Content-type</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text/csv</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre></div>\n<hr>\n<p>Seperti itulah cara melakukan export CSV secara aman di Laravel. Kalau ada saran, masukan, atau pertanyaan, silahkan kontak facebook saya.\nAkhir kata, semoga bermanfaat.</p>\n","excerpt":"Pada versi 6.0, Laravel menambahkan sebuah fitur baru yaitu Lazy Collection. Dengan Lazy Collection, aplikasi Laravel dapat mengambil sekumpulan data dari database tanpa harus menampung seluruh data","description":"Bagaimana memanfaatkan generator dan streaming CSV untuk export jutaan data secara aman.","tags":[{"id":"Laravel","title":"Laravel","path":"/tag/Laravel/"},{"id":"PHP","title":"PHP","path":"/tag/PHP/"}]}},{"node":{"id":"be8e7a02e0533f43d78409c7df8d067e","title":"Redis University RU202 - Minggu Ke-2","datetime":"2019-08-23 11:00:00","path":"/artikel/redis-university-ru202-minggu-ke-2/","content":"<p>Ini adalah catatan minggu ke-2 dari apa yang saya pelajari di kelas RU202-nya <a href=\"https://university.redislabs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis University</a> yang berjudul <strong>\"Redis Streams\"</strong>.</p>\n<p>Pada minggu ke-2 ini topik pembahasannya adalah:</p>\n<ol>\n<li>Producer</li>\n<li>Range Queries</li>\n<li>The Consumer</li>\n</ol>\n<h2 id=\"1-producer\"><a href=\"#1-producer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Producer</h2>\n<p>Pada bagian ini dijelaskan panjang lebar mengenai <em>stream producer</em>, disini saya rangkum saja kedalam beberapa poin dibawah ini: </p>\n<ul>\n<li><em>Stream Producer</em> adalah software/aplikasi yang berperan sebagai pengirim data kedalam stream.</li>\n<li>Data di dalam stream disebut sebagai 'message'.</li>\n<li><em>Stream Producer</em> menggunakan Redis Client API untuk memasukkan message kedalam stream.</li>\n<li>Pada Redis CLI, kita bisa menggunakan perintah <code>XADD stream_name message_id field value [field_2 value_2 ... field_n value_n]</code> untuk menambahkan message kedalam stream. Contoh untuk mengirim data temperatur kedalam stream: <code>XADD temperature * celcius 39</code>.</li>\n</ul>\n<h4 id=\"message-id\"><a href=\"#message-id\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Message ID</h4>\n<ul>\n<li>Untuk generate message ID secara otomatis, gunakan <code>*</code> (seperti contoh diatas). </li>\n<li>Message ID tidak dapat diubah.</li>\n<li>\n<p>Contoh message ID hasil generate: <code>1566533258158-0</code></p>\n<ul>\n<li><code>1566533258158</code>: <em>millisecond-timestamp</em>.</li>\n<li><code>0</code>: <em>sub-millisecond-sequence</em>, jika terdapat pesan dalam <em>millisecond-timestamp</em> yang sama, maka angka ini bertambah. Dan angka ini akan 0 kembali pada <em>millisecond-timestamp</em> yang berbeda.</li>\n</ul>\n</li>\n<li>\n<p>Contoh membuat message ID secara manual: <code>XADD mystream 100 x 1</code>.</p>\n<ul>\n<li>Message ID harus berupa unsigned integer (paling kecil 0).</li>\n<li>Hasil ID digenerate: <code>100-0</code> dimana <code>0</code> adalah urutan dari id <code>100</code>.</li>\n<li>Catatan: setelah menambahkan message dengan ID 100 kedalam stream mystream, maka kita tidak dapat menambahkan message dengan ID dibawah 100 kedalam stream mystream tersebut.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"message-payload\"><a href=\"#message-payload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Message Payload</h4>\n<ul>\n<li>Message payload pada Redis Stream memiliki struktur data seperti hash (<code>Map&#x3C;String, String></code>).</li>\n<li>Tidak ada batasan berapa field yang dapat disimpan didalam setiap message.</li>\n<li>\n<p>Redis akan secara otomatis melakukan kompresi pada nama field di stream yang sama, contoh:</p>\n<ul>\n<li><code>XADD coordinates * latitude 0.1 longitude 1.0</code></li>\n<li><code>XADD coordinates * latitude 0.2 longitude 1.0</code></li>\n<li><code>XADD coordinates * latitude 0.3 longitude 1.1</code></li>\n<li>Pada 3 perintah <code>XADD</code> diatas, maka redis tidak akan menyimpan nama field <code>latitude</code> dan <code>longitude</code> pada 2 perintah <code>XADD</code> bawahnya.</li>\n<li>Tapi, jika perintah <code>XADD</code> selanjutnya memiliki field yang berbeda, entah ditambah field baru, atau ada field yang berubah, maka redis akan menyimpan nama field message tersebut secara utuh.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"managing-the-length-of-a-stream\"><a href=\"#managing-the-length-of-a-stream\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Managing the Length of a Stream</h4>\n<p>Untuk membatasi banyaknya message pada stream supaya tidak terlalu bengkak, dapat gunakan beberapa cara berikut:</p>\n<ol>\n<li>Gunakan <code>XADD</code> dengan <code>MAXLEN</code>. Contoh <code>XADD mystream * foo bar MAXLEN 1000</code>, maka jika ini adalah message yang ke-1001, message paling lama akan dihapus sehingga jumlah messagenya menjadi 1000.</li>\n<li>Gunakan perintah <code>XDEL</code>. Cara ini tidak dianjurkan karena tidak efektif.</li>\n<li>Gunakan perintah <code>XTRIM</code>. Contoh <code>XTRIM mystream MAXLEN 1000</code>, maka message ke 1001 sampai dengan yang paling lama akan dihapus.</li>\n</ol>\n<p>Yang saya masih bingung setelah melakukan proses diatas, message pada stream memang betul akan hilang,\ndalam artian ketika kita gunakan <code>XRANGE mystream - +</code> message yang terhapus tidak lagi muncul. Tetapi saat digunakan <code>MEMORY USAGE mystream</code>, memori yang terpakai masih sama. Dia ngasih tau sih memang saat menghapus message pada stream, message tidak secara langsung hilang, melainkan hanya diberi flag \"deleted\". Cuma yang masih belum saya tau, kapan memori tersebut benar-benar dihapus?</p>\n<p>Selain cara diatas, sebetulnya ada cara lain yang disarankan, yaitu menggunakan <code>XTRIM mystream MAXLEN ~ 1000</code>, atau <code>XADD mystream * foo bar MAXLEN ~ 1000</code>, ini penjelasan mereka tentang tanga <code>~</code>:</p>\n<blockquote>\n<p>The ~ argument between the MAXLEN option and the actual count means that the user is not really requesting that the stream length is exactly 1000 items, but instead it could be a few tens of entries more, but never less than 1000 items. When this option modifier is used, the trimming is performed only when Redis is able to remove a whole macro node. This makes it much more efficient, and it is usually what you want.</p>\n</blockquote>\n<p>Kenapa saya tidak masukkan cara ini di list, karena saya belum mengerti betul cara kerja si <code>~</code> itu.\nDisitu tertulis \"could be a few tens of entries more\", jadi saya coba buat stream dengan 100 message, dengan harapan setelah saya coba <code>XTRIM mystream MAXLEN ~ 10</code> maka akan menghapus <code>mystream</code> menjadi 10-50 message (few tens more). Tapi ternyata tidak terjadi apa-apa, <code>XLEN mystream</code> masih tetap 100.</p>\n<p>Entahlah, mungkin kalau messagenya ribuan bakal dihapus. Mungkin.</p>\n<h2 id=\"2-range-queries\"><a href=\"#2-range-queries\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Range Queries</h2>\n<p>Untuk mengambil  message dalam range ID tertentu, dapat menggunakan perintah <code>XRANGE</code> dan <code>XREVRANGE</code>. Perbedaannya adalah <code>XRANGE</code> akan mengambil message dan mengurutkannya secara <em>ascending</em> (dari paling awal), <code>XREVRANGE</code> akan mengambil message dan mengurutkannya secara <em>descending</em> (dari paling akhir).</p>\n<p>Berikut contoh-contoh penggunaan <code>XRANGE</code> dan <code>XREVRANGE</code>:</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #676E95\"># Beberapa cara mengambil semua message di dalam mystream</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">XRANGE mystream - +</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">XRANGE mystream 0-0 +</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\"># Mengambil semua message dari 1526985054069-0 s/d data terakhir di dalam mystream</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">XRANGE mystream 1526985054069-0 +</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\"># Mengambil semua message diantara 1526985054069-0 s/d 1531243452312-0 terakhir di dalam mystream</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">XRANGE mystream 1526985054069-0 1531243452312-0</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\"># Mengambil 10 message PERTAMA dari mystream</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">XRANGE mystream - + COUNT 10</span></span>\n\n<span class=\"line\"><span style=\"color: #676E95\"># Mengambil 10 message TERAKHIR dari mystream</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">XREVRANGE mystream + - COUNT 10</span></span></code></pre></div>\n<p>Tanda <code>-</code> dan <code>+</code> adalah special ID, <code>-</code> adalah alias untuk ID awal (0-0), sedangkan <code>+</code> adalah alias untuk ID terakhir (18446744073709551615-18446744073709551615).</p>\n<h2 id=\"3-the-consumer\"><a href=\"#3-the-consumer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. The Consumer</h2>\n<p>Untuk men-<em>consume</em> data pada stream, dapat menggunakan perintah <code>XREAD</code>. Berikut adalah beberapa contoh penggunaan <code>XREAD</code>.</p>\n<div class='code-container'><pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">XREAD COUNT 1 STREAMS mystream</span></span></code></pre></div>\n","excerpt":"Ini adalah catatan minggu ke-2 dari apa yang saya pelajari di kelas RU202-nya Redis University yang berjudul \"Redis Streams\". Pada minggu ke-2 ini topik pembahasannya adalah:  Producer Range Queries","description":"Catatan kelas Redis University RU102 minggu ke-2","tags":[{"id":"Redis University","title":"Redis University","path":"/tag/Redis%20University/"},{"id":"Course","title":"Course","path":"/tag/Course/"},{"id":"RU202","title":"RU202","path":"/tag/RU202/"}]}}]}}},"context":{}}